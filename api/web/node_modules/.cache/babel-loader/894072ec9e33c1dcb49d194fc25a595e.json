{"ast":null,"code":"import SectionManager from '../SectionManager';\nexport default function calculateSizeAndPositionData(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSizeAndPositionGetter = _ref.cellSizeAndPositionGetter,\n      sectionSize = _ref.sectionSize;\n  var cellMetadata = [];\n  var sectionManager = new SectionManager(sectionSize);\n  var height = 0;\n  var width = 0;\n\n  for (var index = 0; index < cellCount; index++) {\n    var cellMetadatum = cellSizeAndPositionGetter({\n      index: index\n    });\n\n    if (cellMetadatum.height == null || isNaN(cellMetadatum.height) || cellMetadatum.width == null || isNaN(cellMetadatum.width) || cellMetadatum.x == null || isNaN(cellMetadatum.x) || cellMetadatum.y == null || isNaN(cellMetadatum.y)) {\n      throw Error(\"Invalid metadata returned for cell \".concat(index, \":\\n        x:\").concat(cellMetadatum.x, \", y:\").concat(cellMetadatum.y, \", width:\").concat(cellMetadatum.width, \", height:\").concat(cellMetadatum.height));\n    }\n\n    height = Math.max(height, cellMetadatum.y + cellMetadatum.height);\n    width = Math.max(width, cellMetadatum.x + cellMetadatum.width);\n    cellMetadata[index] = cellMetadatum;\n    sectionManager.registerCell({\n      cellMetadatum: cellMetadatum,\n      index: index\n    });\n  }\n\n  return {\n    cellMetadata: cellMetadata,\n    height: height,\n    sectionManager: sectionManager,\n    width: width\n  };\n}","map":{"version":3,"sources":["/home/ycali/dev/CONSULTORIO/web/node_modules/react-virtualized/dist/es/Collection/utils/calculateSizeAndPositionData.js"],"names":["SectionManager","calculateSizeAndPositionData","_ref","cellCount","cellSizeAndPositionGetter","sectionSize","cellMetadata","sectionManager","height","width","index","cellMetadatum","isNaN","x","y","Error","concat","Math","max","registerCell"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,mBAA3B;AACA,eAAe,SAASC,4BAAT,CAAsCC,IAAtC,EAA4C;AACzD,MAAIC,SAAS,GAAGD,IAAI,CAACC,SAArB;AAAA,MACIC,yBAAyB,GAAGF,IAAI,CAACE,yBADrC;AAAA,MAEIC,WAAW,GAAGH,IAAI,CAACG,WAFvB;AAGA,MAAIC,YAAY,GAAG,EAAnB;AACA,MAAIC,cAAc,GAAG,IAAIP,cAAJ,CAAmBK,WAAnB,CAArB;AACA,MAAIG,MAAM,GAAG,CAAb;AACA,MAAIC,KAAK,GAAG,CAAZ;;AAEA,OAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGP,SAA5B,EAAuCO,KAAK,EAA5C,EAAgD;AAC9C,QAAIC,aAAa,GAAGP,yBAAyB,CAAC;AAC5CM,MAAAA,KAAK,EAAEA;AADqC,KAAD,CAA7C;;AAIA,QAAIC,aAAa,CAACH,MAAd,IAAwB,IAAxB,IAAgCI,KAAK,CAACD,aAAa,CAACH,MAAf,CAArC,IAA+DG,aAAa,CAACF,KAAd,IAAuB,IAAtF,IAA8FG,KAAK,CAACD,aAAa,CAACF,KAAf,CAAnG,IAA4HE,aAAa,CAACE,CAAd,IAAmB,IAA/I,IAAuJD,KAAK,CAACD,aAAa,CAACE,CAAf,CAA5J,IAAiLF,aAAa,CAACG,CAAd,IAAmB,IAApM,IAA4MF,KAAK,CAACD,aAAa,CAACG,CAAf,CAArN,EAAwO;AACtO,YAAMC,KAAK,CAAC,sCAAsCC,MAAtC,CAA6CN,KAA7C,EAAoD,eAApD,EAAqEM,MAArE,CAA4EL,aAAa,CAACE,CAA1F,EAA6F,MAA7F,EAAqGG,MAArG,CAA4GL,aAAa,CAACG,CAA1H,EAA6H,UAA7H,EAAyIE,MAAzI,CAAgJL,aAAa,CAACF,KAA9J,EAAqK,WAArK,EAAkLO,MAAlL,CAAyLL,aAAa,CAACH,MAAvM,CAAD,CAAX;AACD;;AAEDA,IAAAA,MAAM,GAAGS,IAAI,CAACC,GAAL,CAASV,MAAT,EAAiBG,aAAa,CAACG,CAAd,GAAkBH,aAAa,CAACH,MAAjD,CAAT;AACAC,IAAAA,KAAK,GAAGQ,IAAI,CAACC,GAAL,CAAST,KAAT,EAAgBE,aAAa,CAACE,CAAd,GAAkBF,aAAa,CAACF,KAAhD,CAAR;AACAH,IAAAA,YAAY,CAACI,KAAD,CAAZ,GAAsBC,aAAtB;AACAJ,IAAAA,cAAc,CAACY,YAAf,CAA4B;AAC1BR,MAAAA,aAAa,EAAEA,aADW;AAE1BD,MAAAA,KAAK,EAAEA;AAFmB,KAA5B;AAID;;AAED,SAAO;AACLJ,IAAAA,YAAY,EAAEA,YADT;AAELE,IAAAA,MAAM,EAAEA,MAFH;AAGLD,IAAAA,cAAc,EAAEA,cAHX;AAILE,IAAAA,KAAK,EAAEA;AAJF,GAAP;AAMD","sourcesContent":["import SectionManager from '../SectionManager';\nexport default function calculateSizeAndPositionData(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSizeAndPositionGetter = _ref.cellSizeAndPositionGetter,\n      sectionSize = _ref.sectionSize;\n  var cellMetadata = [];\n  var sectionManager = new SectionManager(sectionSize);\n  var height = 0;\n  var width = 0;\n\n  for (var index = 0; index < cellCount; index++) {\n    var cellMetadatum = cellSizeAndPositionGetter({\n      index: index\n    });\n\n    if (cellMetadatum.height == null || isNaN(cellMetadatum.height) || cellMetadatum.width == null || isNaN(cellMetadatum.width) || cellMetadatum.x == null || isNaN(cellMetadatum.x) || cellMetadatum.y == null || isNaN(cellMetadatum.y)) {\n      throw Error(\"Invalid metadata returned for cell \".concat(index, \":\\n        x:\").concat(cellMetadatum.x, \", y:\").concat(cellMetadatum.y, \", width:\").concat(cellMetadatum.width, \", height:\").concat(cellMetadatum.height));\n    }\n\n    height = Math.max(height, cellMetadatum.y + cellMetadatum.height);\n    width = Math.max(width, cellMetadatum.x + cellMetadatum.width);\n    cellMetadata[index] = cellMetadatum;\n    sectionManager.registerCell({\n      cellMetadatum: cellMetadatum,\n      index: index\n    });\n  }\n\n  return {\n    cellMetadata: cellMetadata,\n    height: height,\n    sectionManager: sectionManager,\n    width: width\n  };\n}"]},"metadata":{},"sourceType":"module"}