{"ast":null,"code":"var _jsxFileName = \"/home/ycali/dev/CONSULTORIO/web/src/app/pages/_components/AccordeonMenu.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport MuiAccordion from '@mui/material/Accordion';\nimport MuiAccordionSummary from '@mui/material/AccordionSummary';\nimport MuiAccordionDetails from '@mui/material/AccordionDetails';\nimport Typography from '@mui/material/Typography';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Accordion = styled(props => /*#__PURE__*/_jsxDEV(MuiAccordion, {\n  disableGutters: true,\n  elevation: 0,\n  square: true,\n  ...props\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 10,\n  columnNumber: 3\n}, this))(({\n  theme\n}) => ({\n  border: `1px solid ${theme.palette.divider}`,\n  '&:not(:last-child)': {\n    borderBottom: 0\n  },\n  '&:before': {\n    display: 'none'\n  }\n}));\nconst AccordionSummary = styled(props => /*#__PURE__*/_jsxDEV(MuiAccordionSummary, {\n  expandIcon: /*#__PURE__*/_jsxDEV(KeyboardArrowDownIcon, {\n    sx: {\n      fontSize: '0.9rem'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 17\n  }, this),\n  ...props\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 22,\n  columnNumber: 3\n}, this))(({\n  theme\n}) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, .05)' : 'rgba(0, 0, 0, .03)',\n  flexDirection: 'row-reverse',\n  '& .MuiAccordionSummary-expandIconWrapper.Mui-expanded': {\n    transform: 'rotate(90deg)'\n  },\n  '& .MuiAccordionSummary-content': {\n    marginLeft: theme.spacing(1)\n  }\n}));\nconst AccordionDetails = styled(MuiAccordionDetails)(({\n  theme\n}) => ({\n  padding: theme.spacing(2),\n  borderTop: '1px solid rgba(0, 0, 0, .125)'\n}));\n\nconst CustomizedAccordions = ({\n  list\n}) => {\n  _s();\n\n  const [expanded, setExpanded] = React.useState('panel1');\n\n  const handleChange = panel => (event, newExpanded) => {\n    setExpanded(newExpanded ? panel : false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: list && list.map((item, index) => /*#__PURE__*/_jsxDEV(Accordion, {\n      expanded: expanded === 'panel1',\n      onChange: handleChange('panel1'),\n      children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n        \"aria-controls\": \"panel1d-content\",\n        id: \"panel1d-header\",\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), item && item.subMenu ? /*#__PURE__*/_jsxDEV(AccordionDetails, {\n        children: item && item.subMenu.map((item2, index2) => /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"   \", item2.name, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 1\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CustomizedAccordions, \"MVmIXZtMVZNxNM5U1EshvFNQNIE=\");\n\n_c = CustomizedAccordions;\nexport default CustomizedAccordions;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomizedAccordions\");","map":{"version":3,"sources":["/home/ycali/dev/CONSULTORIO/web/src/app/pages/_components/AccordeonMenu.js"],"names":["React","styled","MuiAccordion","MuiAccordionSummary","MuiAccordionDetails","Typography","KeyboardArrowDownIcon","Accordion","props","theme","border","palette","divider","borderBottom","display","AccordionSummary","fontSize","backgroundColor","mode","flexDirection","transform","marginLeft","spacing","AccordionDetails","padding","borderTop","CustomizedAccordions","list","expanded","setExpanded","useState","handleChange","panel","event","newExpanded","map","item","index","name","subMenu","item2","index2"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { styled } from '@mui/material/styles'; \nimport MuiAccordion from '@mui/material/Accordion';\nimport MuiAccordionSummary from '@mui/material/AccordionSummary';\nimport MuiAccordionDetails from '@mui/material/AccordionDetails';\nimport Typography from '@mui/material/Typography';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\n\nconst Accordion = styled((props) => (\n  <MuiAccordion disableGutters elevation={0} square {...props} />\n))(({ theme }) => ({\n  border: `1px solid ${theme.palette.divider}`,\n  '&:not(:last-child)': {\n    borderBottom: 0,\n  },\n  '&:before': {\n    display: 'none',\n  },\n}));\n\nconst AccordionSummary = styled((props) => (\n  <MuiAccordionSummary\n    expandIcon={<KeyboardArrowDownIcon sx={{ fontSize: '0.9rem' }} />}\n    {...props}\n  />\n))(({ theme }) => ({\n  backgroundColor:\n    theme.palette.mode === 'dark'\n      ? 'rgba(255, 255, 255, .05)'\n      : 'rgba(0, 0, 0, .03)',\n  flexDirection: 'row-reverse',\n  '& .MuiAccordionSummary-expandIconWrapper.Mui-expanded': {\n    transform: 'rotate(90deg)',\n  },\n  '& .MuiAccordionSummary-content': {\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nconst AccordionDetails = styled(MuiAccordionDetails)(({ theme }) => ({\n  padding: theme.spacing(2),\n  borderTop: '1px solid rgba(0, 0, 0, .125)',\n}));\n\n\nconst CustomizedAccordions= ({list}) =>{\n  const [expanded, setExpanded] = React.useState('panel1');\n\n  const handleChange = (panel) => (event, newExpanded) => {\n    setExpanded(newExpanded ? panel : false);\n  };\n\n  return (\n    <div>\n    \n        {list && list.map((item, index) => (\n          \n<Accordion expanded={expanded === 'panel1'} onChange={handleChange('panel1')}>\n        <AccordionSummary aria-controls=\"panel1d-content\" id=\"panel1d-header\">\n          <Typography>{item.name}</Typography>\n        </AccordionSummary>\n        {item && item.subMenu ? \n          <AccordionDetails>\n          {item && item.subMenu.map((item2, index2) => ( \n  \n              <Typography>   { item2.name} </Typography>\n          ))}\n            \n          </AccordionDetails> :null\n    }\n      \n      </Accordion>\n          ))}\n    </div>\n  );\n}\n\nexport default CustomizedAccordions;"]},"metadata":{},"sourceType":"module"}