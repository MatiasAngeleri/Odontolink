{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport clsx from 'clsx';\nimport Column from './Column';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer';\nimport SortDirection from './SortDirection';\n/**\n * Table component with fixed headers and virtualized rows for improved performance with large data sets.\n * This component expects explicit width, height, and padding parameters.\n */\n\nvar Table = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(Table, _React$PureComponent);\n\n  function Table(props) {\n    var _this;\n\n    _classCallCheck(this, Table);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Table).call(this, props));\n    _this.state = {\n      scrollbarWidth: 0\n    };\n    _this._createColumn = _this._createColumn.bind(_assertThisInitialized(_this));\n    _this._createRow = _this._createRow.bind(_assertThisInitialized(_this));\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    _this._onSectionRendered = _this._onSectionRendered.bind(_assertThisInitialized(_this));\n    _this._setRef = _this._setRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Table, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref) {\n      var alignment = _ref.alignment,\n          index = _ref.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref3$columnIndex = _ref3.columnIndex,\n          columnIndex = _ref3$columnIndex === void 0 ? 0 : _ref3$columnIndex,\n          _ref3$rowIndex = _ref3.rowIndex,\n          rowIndex = _ref3$rowIndex === void 0 ? 0 : _ref3$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"getScrollbarWidth\",\n    value: function getScrollbarWidth() {\n      if (this.Grid) {\n        var _Grid = findDOMNode(this.Grid);\n\n        var clientWidth = _Grid.clientWidth || 0;\n        var offsetWidth = _Grid.offsetWidth || 0;\n        return offsetWidth - clientWidth;\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          children = _this$props.children,\n          className = _this$props.className,\n          disableHeader = _this$props.disableHeader,\n          gridClassName = _this$props.gridClassName,\n          gridStyle = _this$props.gridStyle,\n          headerHeight = _this$props.headerHeight,\n          headerRowRenderer = _this$props.headerRowRenderer,\n          height = _this$props.height,\n          id = _this$props.id,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          rowClassName = _this$props.rowClassName,\n          rowStyle = _this$props.rowStyle,\n          scrollToIndex = _this$props.scrollToIndex,\n          style = _this$props.style,\n          width = _this$props.width;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var availableRowsHeight = disableHeader ? height : height - headerHeight;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: -1\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: -1\n      }) : rowStyle; // Precompute and cache column styles before rendering rows and columns to speed things up\n\n      this._cachedColumnStyles = [];\n      React.Children.toArray(children).forEach(function (column, index) {\n        var flexStyles = _this2._getFlexStyleForColumn(column, column.props.style);\n\n        _this2._cachedColumnStyles[index] = _objectSpread({\n          overflow: 'hidden'\n        }, flexStyles);\n      }); // Note that we specify :rowCount, :scrollbarWidth, :sortBy, and :sortDirection as properties on Grid even though these have nothing to do with Grid.\n      // This is done because Grid is a pure component and won't update unless its properties or state has changed.\n      // Any property that should trigger a re-render of Grid then is specified here to avoid a stale display.\n\n      return React.createElement(\"div\", {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-labelledby\": this.props['aria-labelledby'],\n        \"aria-colcount\": React.Children.toArray(children).length,\n        \"aria-rowcount\": this.props.rowCount,\n        className: clsx('ReactVirtualized__Table', className),\n        id: id,\n        role: \"grid\",\n        style: style\n      }, !disableHeader && headerRowRenderer({\n        className: clsx('ReactVirtualized__Table__headerRow', rowClass),\n        columns: this._getHeaderColumns(),\n        style: _objectSpread({\n          height: headerHeight,\n          overflow: 'hidden',\n          paddingRight: scrollbarWidth,\n          width: width\n        }, rowStyleObject)\n      }), React.createElement(Grid, _extends({}, this.props, {\n        \"aria-readonly\": null,\n        autoContainerWidth: true,\n        className: clsx('ReactVirtualized__Table__Grid', gridClassName),\n        cellRenderer: this._createRow,\n        columnWidth: width,\n        columnCount: 1,\n        height: availableRowsHeight,\n        id: undefined,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        role: \"rowgroup\",\n        scrollbarWidth: scrollbarWidth,\n        scrollToRow: scrollToIndex,\n        style: _objectSpread({}, gridStyle, {\n          overflowX: 'hidden'\n        })\n      })));\n    }\n  }, {\n    key: \"_createColumn\",\n    value: function _createColumn(_ref4) {\n      var column = _ref4.column,\n          columnIndex = _ref4.columnIndex,\n          isScrolling = _ref4.isScrolling,\n          parent = _ref4.parent,\n          rowData = _ref4.rowData,\n          rowIndex = _ref4.rowIndex;\n      var onColumnClick = this.props.onColumnClick;\n      var _column$props = column.props,\n          cellDataGetter = _column$props.cellDataGetter,\n          cellRenderer = _column$props.cellRenderer,\n          className = _column$props.className,\n          columnData = _column$props.columnData,\n          dataKey = _column$props.dataKey,\n          id = _column$props.id;\n      var cellData = cellDataGetter({\n        columnData: columnData,\n        dataKey: dataKey,\n        rowData: rowData\n      });\n      var renderedCell = cellRenderer({\n        cellData: cellData,\n        columnData: columnData,\n        columnIndex: columnIndex,\n        dataKey: dataKey,\n        isScrolling: isScrolling,\n        parent: parent,\n        rowData: rowData,\n        rowIndex: rowIndex\n      });\n\n      var onClick = function onClick(event) {\n        onColumnClick && onColumnClick({\n          columnData: columnData,\n          dataKey: dataKey,\n          event: event\n        });\n      };\n\n      var style = this._cachedColumnStyles[columnIndex];\n      var title = typeof renderedCell === 'string' ? renderedCell : null; // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n      return React.createElement(\"div\", {\n        \"aria-colindex\": columnIndex + 1,\n        \"aria-describedby\": id,\n        className: clsx('ReactVirtualized__Table__rowColumn', className),\n        key: 'Row' + rowIndex + '-' + 'Col' + columnIndex,\n        onClick: onClick,\n        role: \"gridcell\",\n        style: style,\n        title: title\n      }, renderedCell);\n    }\n  }, {\n    key: \"_createHeader\",\n    value: function _createHeader(_ref5) {\n      var column = _ref5.column,\n          index = _ref5.index;\n      var _this$props2 = this.props,\n          headerClassName = _this$props2.headerClassName,\n          headerStyle = _this$props2.headerStyle,\n          onHeaderClick = _this$props2.onHeaderClick,\n          sort = _this$props2.sort,\n          sortBy = _this$props2.sortBy,\n          sortDirection = _this$props2.sortDirection;\n      var _column$props2 = column.props,\n          columnData = _column$props2.columnData,\n          dataKey = _column$props2.dataKey,\n          defaultSortDirection = _column$props2.defaultSortDirection,\n          disableSort = _column$props2.disableSort,\n          headerRenderer = _column$props2.headerRenderer,\n          id = _column$props2.id,\n          label = _column$props2.label;\n      var sortEnabled = !disableSort && sort;\n      var classNames = clsx('ReactVirtualized__Table__headerColumn', headerClassName, column.props.headerClassName, {\n        ReactVirtualized__Table__sortableHeaderColumn: sortEnabled\n      });\n\n      var style = this._getFlexStyleForColumn(column, _objectSpread({}, headerStyle, {}, column.props.headerStyle));\n\n      var renderedHeader = headerRenderer({\n        columnData: columnData,\n        dataKey: dataKey,\n        disableSort: disableSort,\n        label: label,\n        sortBy: sortBy,\n        sortDirection: sortDirection\n      });\n      var headerOnClick, headerOnKeyDown, headerTabIndex, headerAriaSort, headerAriaLabel;\n\n      if (sortEnabled || onHeaderClick) {\n        // If this is a sortable header, clicking it should update the table data's sorting.\n        var isFirstTimeSort = sortBy !== dataKey; // If this is the firstTime sort of this column, use the column default sort order.\n        // Otherwise, invert the direction of the sort.\n\n        var newSortDirection = isFirstTimeSort ? defaultSortDirection : sortDirection === SortDirection.DESC ? SortDirection.ASC : SortDirection.DESC;\n\n        var onClick = function onClick(event) {\n          sortEnabled && sort({\n            defaultSortDirection: defaultSortDirection,\n            event: event,\n            sortBy: dataKey,\n            sortDirection: newSortDirection\n          });\n          onHeaderClick && onHeaderClick({\n            columnData: columnData,\n            dataKey: dataKey,\n            event: event\n          });\n        };\n\n        var onKeyDown = function onKeyDown(event) {\n          if (event.key === 'Enter' || event.key === ' ') {\n            onClick(event);\n          }\n        };\n\n        headerAriaLabel = column.props['aria-label'] || label || dataKey;\n        headerAriaSort = 'none';\n        headerTabIndex = 0;\n        headerOnClick = onClick;\n        headerOnKeyDown = onKeyDown;\n      }\n\n      if (sortBy === dataKey) {\n        headerAriaSort = sortDirection === SortDirection.ASC ? 'ascending' : 'descending';\n      } // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n\n      return React.createElement(\"div\", {\n        \"aria-label\": headerAriaLabel,\n        \"aria-sort\": headerAriaSort,\n        className: classNames,\n        id: id,\n        key: 'Header-Col' + index,\n        onClick: headerOnClick,\n        onKeyDown: headerOnKeyDown,\n        role: \"columnheader\",\n        style: style,\n        tabIndex: headerTabIndex\n      }, renderedHeader);\n    }\n  }, {\n    key: \"_createRow\",\n    value: function _createRow(_ref6) {\n      var _this3 = this;\n\n      var index = _ref6.rowIndex,\n          isScrolling = _ref6.isScrolling,\n          key = _ref6.key,\n          parent = _ref6.parent,\n          style = _ref6.style;\n      var _this$props3 = this.props,\n          children = _this$props3.children,\n          onRowClick = _this$props3.onRowClick,\n          onRowDoubleClick = _this$props3.onRowDoubleClick,\n          onRowRightClick = _this$props3.onRowRightClick,\n          onRowMouseOver = _this$props3.onRowMouseOver,\n          onRowMouseOut = _this$props3.onRowMouseOut,\n          rowClassName = _this$props3.rowClassName,\n          rowGetter = _this$props3.rowGetter,\n          rowRenderer = _this$props3.rowRenderer,\n          rowStyle = _this$props3.rowStyle;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: index\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: index\n      }) : rowStyle;\n      var rowData = rowGetter({\n        index: index\n      });\n      var columns = React.Children.toArray(children).map(function (column, columnIndex) {\n        return _this3._createColumn({\n          column: column,\n          columnIndex: columnIndex,\n          isScrolling: isScrolling,\n          parent: parent,\n          rowData: rowData,\n          rowIndex: index,\n          scrollbarWidth: scrollbarWidth\n        });\n      });\n      var className = clsx('ReactVirtualized__Table__row', rowClass);\n\n      var flattenedStyle = _objectSpread({}, style, {\n        height: this._getRowHeight(index),\n        overflow: 'hidden',\n        paddingRight: scrollbarWidth\n      }, rowStyleObject);\n\n      return rowRenderer({\n        className: className,\n        columns: columns,\n        index: index,\n        isScrolling: isScrolling,\n        key: key,\n        onRowClick: onRowClick,\n        onRowDoubleClick: onRowDoubleClick,\n        onRowRightClick: onRowRightClick,\n        onRowMouseOver: onRowMouseOver,\n        onRowMouseOut: onRowMouseOut,\n        rowData: rowData,\n        style: flattenedStyle\n      });\n    }\n    /**\n     * Determines the flex-shrink, flex-grow, and width values for a cell (header or column).\n     */\n\n  }, {\n    key: \"_getFlexStyleForColumn\",\n    value: function _getFlexStyleForColumn(column) {\n      var customStyle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var flexValue = \"\".concat(column.props.flexGrow, \" \").concat(column.props.flexShrink, \" \").concat(column.props.width, \"px\");\n\n      var style = _objectSpread({}, customStyle, {\n        flex: flexValue,\n        msFlex: flexValue,\n        WebkitFlex: flexValue\n      });\n\n      if (column.props.maxWidth) {\n        style.maxWidth = column.props.maxWidth;\n      }\n\n      if (column.props.minWidth) {\n        style.minWidth = column.props.minWidth;\n      }\n\n      return style;\n    }\n  }, {\n    key: \"_getHeaderColumns\",\n    value: function _getHeaderColumns() {\n      var _this4 = this;\n\n      var _this$props4 = this.props,\n          children = _this$props4.children,\n          disableHeader = _this$props4.disableHeader;\n      var items = disableHeader ? [] : React.Children.toArray(children);\n      return items.map(function (column, index) {\n        return _this4._createHeader({\n          column: column,\n          index: index\n        });\n      });\n    }\n  }, {\n    key: \"_getRowHeight\",\n    value: function _getRowHeight(rowIndex) {\n      var rowHeight = this.props.rowHeight;\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: rowIndex\n      }) : rowHeight;\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref7) {\n      var clientHeight = _ref7.clientHeight,\n          scrollHeight = _ref7.scrollHeight,\n          scrollTop = _ref7.scrollTop;\n      var onScroll = this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    }\n  }, {\n    key: \"_onSectionRendered\",\n    value: function _onSectionRendered(_ref8) {\n      var rowOverscanStartIndex = _ref8.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref8.rowOverscanStopIndex,\n          rowStartIndex = _ref8.rowStartIndex,\n          rowStopIndex = _ref8.rowStopIndex;\n      var onRowsRendered = this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    }\n  }, {\n    key: \"_setRef\",\n    value: function _setRef(ref) {\n      this.Grid = ref;\n    }\n  }, {\n    key: \"_setScrollbarWidth\",\n    value: function _setScrollbarWidth() {\n      var scrollbarWidth = this.getScrollbarWidth();\n      this.setState({\n        scrollbarWidth: scrollbarWidth\n      });\n    }\n  }]);\n\n  return Table;\n}(React.PureComponent);\n\n_defineProperty(Table, \"defaultProps\", {\n  disableHeader: false,\n  estimatedRowSize: 30,\n  headerHeight: 0,\n  headerStyle: {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  rowRenderer: defaultRowRenderer,\n  headerRowRenderer: defaultHeaderRowRenderer,\n  rowStyle: {},\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\n\nexport { Table as default };\nTable.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** This is just set on the grid top element. */\n  'aria-label': PropTypes.string,\n\n  /** This is just set on the grid top element. */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /** One or more Columns describing the data displayed in this row */\n  children: function children(props) {\n    var children = React.Children.toArray(props.children);\n\n    for (var i = 0; i < children.length; i++) {\n      var childType = children[i].type;\n\n      if (childType !== Column && !(childType.prototype instanceof Column)) {\n        return new Error('Table only accepts children of type Column');\n      }\n    }\n  },\n\n  /** Optional CSS class name */\n  className: PropTypes.string,\n\n  /** Disable rendering the header at all */\n  disableHeader: PropTypes.bool,\n\n  /**\n   * Used to estimate the total height of a Table before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  estimatedRowSize: PropTypes.number.isRequired,\n\n  /** Optional custom CSS class name to attach to inner Grid element. */\n  gridClassName: PropTypes.string,\n\n  /** Optional inline style to attach to inner Grid element. */\n  gridStyle: PropTypes.object,\n\n  /** Optional CSS class to apply to all column headers */\n  headerClassName: PropTypes.string,\n\n  /** Fixed height of header row */\n  headerHeight: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: any[],\n   *   style: any\n   * }): PropTypes.node\n   */\n  headerRowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table header columns. */\n  headerStyle: PropTypes.object,\n\n  /** Fixed/available height for out DOM element */\n  height: PropTypes.number.isRequired,\n\n  /** Optional id */\n  id: PropTypes.string,\n\n  /** Optional renderer to be used in place of table body rows when rowCount is 0 */\n  noRowsRenderer: PropTypes.func,\n\n  /**\n   * Optional callback when a column is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onColumnClick: PropTypes.func,\n\n  /**\n   * Optional callback when a column's header is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onHeaderClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user double-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowDoubleClick: PropTypes.func,\n\n  /**\n   * Callback invoked when the mouse leaves a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOut: PropTypes.func,\n\n  /**\n   * Callback invoked when a user moves the mouse over a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOver: PropTypes.func,\n\n  /**\n   * Callback invoked when a user right-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowRightClick: PropTypes.func,\n\n  /**\n   * Callback invoked with information about the slice of rows that were just rendered.\n   * ({ startIndex, stopIndex }): void\n   */\n  onRowsRendered: PropTypes.func,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, scrollHeight, scrollTop }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  overscanIndicesGetter: PropTypes.func.isRequired,\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  overscanRowCount: PropTypes.number.isRequired,\n\n  /**\n   * Optional CSS class to apply to all table rows (including the header row).\n   * This property can be a CSS class name (string) or a function that returns a class name.\n   * If a function is provided its signature should be: ({ index: number }): string\n   */\n  rowClassName: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n\n  /**\n   * Callback responsible for returning a data row given an index.\n   * ({ index: number }): any\n   */\n  rowGetter: PropTypes.func.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * ({ index: number }): number\n   */\n  rowHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n\n  /** Number of rows in table. */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: Array,\n   *   index: number,\n   *   isScrolling: boolean,\n   *   onRowClick: ?Function,\n   *   onRowDoubleClick: ?Function,\n   *   onRowMouseOver: ?Function,\n   *   onRowMouseOut: ?Function,\n   *   rowData: any,\n   *   style: any\n   * }): PropTypes.node\n   */\n  rowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table rows. */\n  rowStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n\n  /** See Grid#scrollToAlignment */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  scrollToIndex: PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Sort function to be called if a sortable header is clicked.\n   * Should implement the following interface: ({\n   *   defaultSortDirection: 'ASC' | 'DESC',\n   *   event: MouseEvent,\n   *   sortBy: string,\n   *   sortDirection: SortDirection\n   * }): void\n   */\n  sort: PropTypes.func,\n\n  /** Table data is currently sorted by this :dataKey (if it is sorted at all) */\n  sortBy: PropTypes.string,\n\n  /** Table data is currently sorted in this direction (if it is sorted at all) */\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** Optional inline style */\n  style: PropTypes.object,\n\n  /** Tab index for focus */\n  tabIndex: PropTypes.number,\n\n  /** Width of list */\n  width: PropTypes.number.isRequired\n} : {};\nimport { bpfrpt_proptype_CellPosition } from \"../Grid\";","map":{"version":3,"sources":["/home/ycali/dev/CONSULTORIO/web/node_modules/react-virtualized/dist/es/Table/Table.js"],"names":["_extends","_classCallCheck","_createClass","_possibleConstructorReturn","_getPrototypeOf","_assertThisInitialized","_inherits","_defineProperty","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","clsx","Column","PropTypes","React","findDOMNode","Grid","accessibilityOverscanIndicesGetter","defaultRowRenderer","defaultHeaderRowRenderer","SortDirection","Table","_React$PureComponent","props","_this","call","state","scrollbarWidth","_createColumn","bind","_createRow","_onScroll","_onSectionRendered","_setRef","value","forceUpdateGrid","forceUpdate","getOffsetForRow","_ref","alignment","index","_this$Grid$getOffsetF","getOffsetForCell","rowIndex","scrollTop","invalidateCellSizeAfterRender","_ref2","columnIndex","measureAllRows","measureAllCells","recomputeGridSize","_ref3","undefined","_ref3$columnIndex","_ref3$rowIndex","recomputeRowHeights","scrollToPosition","scrollToRow","scrollToCell","getScrollbarWidth","_Grid","clientWidth","offsetWidth","componentDidMount","_setScrollbarWidth","componentDidUpdate","render","_this2","_this$props","children","className","disableHeader","gridClassName","gridStyle","headerHeight","headerRowRenderer","height","id","noRowsRenderer","rowClassName","rowStyle","scrollToIndex","style","width","availableRowsHeight","rowClass","rowStyleObject","_cachedColumnStyles","Children","toArray","column","flexStyles","_getFlexStyleForColumn","overflow","createElement","rowCount","role","columns","_getHeaderColumns","paddingRight","autoContainerWidth","cellRenderer","columnWidth","columnCount","noContentRenderer","onScroll","onSectionRendered","ref","overflowX","_ref4","isScrolling","parent","rowData","onColumnClick","_column$props","cellDataGetter","columnData","dataKey","cellData","renderedCell","onClick","event","title","_createHeader","_ref5","_this$props2","headerClassName","headerStyle","onHeaderClick","sort","sortBy","sortDirection","_column$props2","defaultSortDirection","disableSort","headerRenderer","label","sortEnabled","classNames","ReactVirtualized__Table__sortableHeaderColumn","renderedHeader","headerOnClick","headerOnKeyDown","headerTabIndex","headerAriaSort","headerAriaLabel","isFirstTimeSort","newSortDirection","DESC","ASC","onKeyDown","tabIndex","_ref6","_this3","_this$props3","onRowClick","onRowDoubleClick","onRowRightClick","onRowMouseOver","onRowMouseOut","rowGetter","rowRenderer","map","flattenedStyle","_getRowHeight","customStyle","flexValue","concat","flexGrow","flexShrink","flex","msFlex","WebkitFlex","maxWidth","minWidth","_this4","_this$props4","items","rowHeight","_ref7","clientHeight","scrollHeight","_ref8","rowOverscanStartIndex","rowOverscanStopIndex","rowStartIndex","rowStopIndex","onRowsRendered","overscanStartIndex","overscanStopIndex","startIndex","stopIndex","setState","PureComponent","estimatedRowSize","overscanIndicesGetter","overscanRowCount","scrollToAlignment","default","propTypes","process","env","NODE_ENV","string","autoHeight","bool","childType","type","prototype","Error","number","isRequired","func","oneOfType","oneOf","bpfrpt_proptype_CellPosition"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport Column from './Column';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer';\nimport SortDirection from './SortDirection';\n/**\n * Table component with fixed headers and virtualized rows for improved performance with large data sets.\n * This component expects explicit width, height, and padding parameters.\n */\n\nvar Table =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Table, _React$PureComponent);\n\n  function Table(props) {\n    var _this;\n\n    _classCallCheck(this, Table);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Table).call(this, props));\n    _this.state = {\n      scrollbarWidth: 0\n    };\n    _this._createColumn = _this._createColumn.bind(_assertThisInitialized(_this));\n    _this._createRow = _this._createRow.bind(_assertThisInitialized(_this));\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    _this._onSectionRendered = _this._onSectionRendered.bind(_assertThisInitialized(_this));\n    _this._setRef = _this._setRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Table, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref) {\n      var alignment = _ref.alignment,\n          index = _ref.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref3$columnIndex = _ref3.columnIndex,\n          columnIndex = _ref3$columnIndex === void 0 ? 0 : _ref3$columnIndex,\n          _ref3$rowIndex = _ref3.rowIndex,\n          rowIndex = _ref3$rowIndex === void 0 ? 0 : _ref3$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"getScrollbarWidth\",\n    value: function getScrollbarWidth() {\n      if (this.Grid) {\n        var _Grid = findDOMNode(this.Grid);\n\n        var clientWidth = _Grid.clientWidth || 0;\n        var offsetWidth = _Grid.offsetWidth || 0;\n        return offsetWidth - clientWidth;\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          children = _this$props.children,\n          className = _this$props.className,\n          disableHeader = _this$props.disableHeader,\n          gridClassName = _this$props.gridClassName,\n          gridStyle = _this$props.gridStyle,\n          headerHeight = _this$props.headerHeight,\n          headerRowRenderer = _this$props.headerRowRenderer,\n          height = _this$props.height,\n          id = _this$props.id,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          rowClassName = _this$props.rowClassName,\n          rowStyle = _this$props.rowStyle,\n          scrollToIndex = _this$props.scrollToIndex,\n          style = _this$props.style,\n          width = _this$props.width;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var availableRowsHeight = disableHeader ? height : height - headerHeight;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: -1\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: -1\n      }) : rowStyle; // Precompute and cache column styles before rendering rows and columns to speed things up\n\n      this._cachedColumnStyles = [];\n      React.Children.toArray(children).forEach(function (column, index) {\n        var flexStyles = _this2._getFlexStyleForColumn(column, column.props.style);\n\n        _this2._cachedColumnStyles[index] = _objectSpread({\n          overflow: 'hidden'\n        }, flexStyles);\n      }); // Note that we specify :rowCount, :scrollbarWidth, :sortBy, and :sortDirection as properties on Grid even though these have nothing to do with Grid.\n      // This is done because Grid is a pure component and won't update unless its properties or state has changed.\n      // Any property that should trigger a re-render of Grid then is specified here to avoid a stale display.\n\n      return React.createElement(\"div\", {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-labelledby\": this.props['aria-labelledby'],\n        \"aria-colcount\": React.Children.toArray(children).length,\n        \"aria-rowcount\": this.props.rowCount,\n        className: clsx('ReactVirtualized__Table', className),\n        id: id,\n        role: \"grid\",\n        style: style\n      }, !disableHeader && headerRowRenderer({\n        className: clsx('ReactVirtualized__Table__headerRow', rowClass),\n        columns: this._getHeaderColumns(),\n        style: _objectSpread({\n          height: headerHeight,\n          overflow: 'hidden',\n          paddingRight: scrollbarWidth,\n          width: width\n        }, rowStyleObject)\n      }), React.createElement(Grid, _extends({}, this.props, {\n        \"aria-readonly\": null,\n        autoContainerWidth: true,\n        className: clsx('ReactVirtualized__Table__Grid', gridClassName),\n        cellRenderer: this._createRow,\n        columnWidth: width,\n        columnCount: 1,\n        height: availableRowsHeight,\n        id: undefined,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        role: \"rowgroup\",\n        scrollbarWidth: scrollbarWidth,\n        scrollToRow: scrollToIndex,\n        style: _objectSpread({}, gridStyle, {\n          overflowX: 'hidden'\n        })\n      })));\n    }\n  }, {\n    key: \"_createColumn\",\n    value: function _createColumn(_ref4) {\n      var column = _ref4.column,\n          columnIndex = _ref4.columnIndex,\n          isScrolling = _ref4.isScrolling,\n          parent = _ref4.parent,\n          rowData = _ref4.rowData,\n          rowIndex = _ref4.rowIndex;\n      var onColumnClick = this.props.onColumnClick;\n      var _column$props = column.props,\n          cellDataGetter = _column$props.cellDataGetter,\n          cellRenderer = _column$props.cellRenderer,\n          className = _column$props.className,\n          columnData = _column$props.columnData,\n          dataKey = _column$props.dataKey,\n          id = _column$props.id;\n      var cellData = cellDataGetter({\n        columnData: columnData,\n        dataKey: dataKey,\n        rowData: rowData\n      });\n      var renderedCell = cellRenderer({\n        cellData: cellData,\n        columnData: columnData,\n        columnIndex: columnIndex,\n        dataKey: dataKey,\n        isScrolling: isScrolling,\n        parent: parent,\n        rowData: rowData,\n        rowIndex: rowIndex\n      });\n\n      var onClick = function onClick(event) {\n        onColumnClick && onColumnClick({\n          columnData: columnData,\n          dataKey: dataKey,\n          event: event\n        });\n      };\n\n      var style = this._cachedColumnStyles[columnIndex];\n      var title = typeof renderedCell === 'string' ? renderedCell : null; // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n      return React.createElement(\"div\", {\n        \"aria-colindex\": columnIndex + 1,\n        \"aria-describedby\": id,\n        className: clsx('ReactVirtualized__Table__rowColumn', className),\n        key: 'Row' + rowIndex + '-' + 'Col' + columnIndex,\n        onClick: onClick,\n        role: \"gridcell\",\n        style: style,\n        title: title\n      }, renderedCell);\n    }\n  }, {\n    key: \"_createHeader\",\n    value: function _createHeader(_ref5) {\n      var column = _ref5.column,\n          index = _ref5.index;\n      var _this$props2 = this.props,\n          headerClassName = _this$props2.headerClassName,\n          headerStyle = _this$props2.headerStyle,\n          onHeaderClick = _this$props2.onHeaderClick,\n          sort = _this$props2.sort,\n          sortBy = _this$props2.sortBy,\n          sortDirection = _this$props2.sortDirection;\n      var _column$props2 = column.props,\n          columnData = _column$props2.columnData,\n          dataKey = _column$props2.dataKey,\n          defaultSortDirection = _column$props2.defaultSortDirection,\n          disableSort = _column$props2.disableSort,\n          headerRenderer = _column$props2.headerRenderer,\n          id = _column$props2.id,\n          label = _column$props2.label;\n      var sortEnabled = !disableSort && sort;\n      var classNames = clsx('ReactVirtualized__Table__headerColumn', headerClassName, column.props.headerClassName, {\n        ReactVirtualized__Table__sortableHeaderColumn: sortEnabled\n      });\n\n      var style = this._getFlexStyleForColumn(column, _objectSpread({}, headerStyle, {}, column.props.headerStyle));\n\n      var renderedHeader = headerRenderer({\n        columnData: columnData,\n        dataKey: dataKey,\n        disableSort: disableSort,\n        label: label,\n        sortBy: sortBy,\n        sortDirection: sortDirection\n      });\n      var headerOnClick, headerOnKeyDown, headerTabIndex, headerAriaSort, headerAriaLabel;\n\n      if (sortEnabled || onHeaderClick) {\n        // If this is a sortable header, clicking it should update the table data's sorting.\n        var isFirstTimeSort = sortBy !== dataKey; // If this is the firstTime sort of this column, use the column default sort order.\n        // Otherwise, invert the direction of the sort.\n\n        var newSortDirection = isFirstTimeSort ? defaultSortDirection : sortDirection === SortDirection.DESC ? SortDirection.ASC : SortDirection.DESC;\n\n        var onClick = function onClick(event) {\n          sortEnabled && sort({\n            defaultSortDirection: defaultSortDirection,\n            event: event,\n            sortBy: dataKey,\n            sortDirection: newSortDirection\n          });\n          onHeaderClick && onHeaderClick({\n            columnData: columnData,\n            dataKey: dataKey,\n            event: event\n          });\n        };\n\n        var onKeyDown = function onKeyDown(event) {\n          if (event.key === 'Enter' || event.key === ' ') {\n            onClick(event);\n          }\n        };\n\n        headerAriaLabel = column.props['aria-label'] || label || dataKey;\n        headerAriaSort = 'none';\n        headerTabIndex = 0;\n        headerOnClick = onClick;\n        headerOnKeyDown = onKeyDown;\n      }\n\n      if (sortBy === dataKey) {\n        headerAriaSort = sortDirection === SortDirection.ASC ? 'ascending' : 'descending';\n      } // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n\n      return React.createElement(\"div\", {\n        \"aria-label\": headerAriaLabel,\n        \"aria-sort\": headerAriaSort,\n        className: classNames,\n        id: id,\n        key: 'Header-Col' + index,\n        onClick: headerOnClick,\n        onKeyDown: headerOnKeyDown,\n        role: \"columnheader\",\n        style: style,\n        tabIndex: headerTabIndex\n      }, renderedHeader);\n    }\n  }, {\n    key: \"_createRow\",\n    value: function _createRow(_ref6) {\n      var _this3 = this;\n\n      var index = _ref6.rowIndex,\n          isScrolling = _ref6.isScrolling,\n          key = _ref6.key,\n          parent = _ref6.parent,\n          style = _ref6.style;\n      var _this$props3 = this.props,\n          children = _this$props3.children,\n          onRowClick = _this$props3.onRowClick,\n          onRowDoubleClick = _this$props3.onRowDoubleClick,\n          onRowRightClick = _this$props3.onRowRightClick,\n          onRowMouseOver = _this$props3.onRowMouseOver,\n          onRowMouseOut = _this$props3.onRowMouseOut,\n          rowClassName = _this$props3.rowClassName,\n          rowGetter = _this$props3.rowGetter,\n          rowRenderer = _this$props3.rowRenderer,\n          rowStyle = _this$props3.rowStyle;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: index\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: index\n      }) : rowStyle;\n      var rowData = rowGetter({\n        index: index\n      });\n      var columns = React.Children.toArray(children).map(function (column, columnIndex) {\n        return _this3._createColumn({\n          column: column,\n          columnIndex: columnIndex,\n          isScrolling: isScrolling,\n          parent: parent,\n          rowData: rowData,\n          rowIndex: index,\n          scrollbarWidth: scrollbarWidth\n        });\n      });\n      var className = clsx('ReactVirtualized__Table__row', rowClass);\n\n      var flattenedStyle = _objectSpread({}, style, {\n        height: this._getRowHeight(index),\n        overflow: 'hidden',\n        paddingRight: scrollbarWidth\n      }, rowStyleObject);\n\n      return rowRenderer({\n        className: className,\n        columns: columns,\n        index: index,\n        isScrolling: isScrolling,\n        key: key,\n        onRowClick: onRowClick,\n        onRowDoubleClick: onRowDoubleClick,\n        onRowRightClick: onRowRightClick,\n        onRowMouseOver: onRowMouseOver,\n        onRowMouseOut: onRowMouseOut,\n        rowData: rowData,\n        style: flattenedStyle\n      });\n    }\n    /**\n     * Determines the flex-shrink, flex-grow, and width values for a cell (header or column).\n     */\n\n  }, {\n    key: \"_getFlexStyleForColumn\",\n    value: function _getFlexStyleForColumn(column) {\n      var customStyle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var flexValue = \"\".concat(column.props.flexGrow, \" \").concat(column.props.flexShrink, \" \").concat(column.props.width, \"px\");\n\n      var style = _objectSpread({}, customStyle, {\n        flex: flexValue,\n        msFlex: flexValue,\n        WebkitFlex: flexValue\n      });\n\n      if (column.props.maxWidth) {\n        style.maxWidth = column.props.maxWidth;\n      }\n\n      if (column.props.minWidth) {\n        style.minWidth = column.props.minWidth;\n      }\n\n      return style;\n    }\n  }, {\n    key: \"_getHeaderColumns\",\n    value: function _getHeaderColumns() {\n      var _this4 = this;\n\n      var _this$props4 = this.props,\n          children = _this$props4.children,\n          disableHeader = _this$props4.disableHeader;\n      var items = disableHeader ? [] : React.Children.toArray(children);\n      return items.map(function (column, index) {\n        return _this4._createHeader({\n          column: column,\n          index: index\n        });\n      });\n    }\n  }, {\n    key: \"_getRowHeight\",\n    value: function _getRowHeight(rowIndex) {\n      var rowHeight = this.props.rowHeight;\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: rowIndex\n      }) : rowHeight;\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref7) {\n      var clientHeight = _ref7.clientHeight,\n          scrollHeight = _ref7.scrollHeight,\n          scrollTop = _ref7.scrollTop;\n      var onScroll = this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    }\n  }, {\n    key: \"_onSectionRendered\",\n    value: function _onSectionRendered(_ref8) {\n      var rowOverscanStartIndex = _ref8.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref8.rowOverscanStopIndex,\n          rowStartIndex = _ref8.rowStartIndex,\n          rowStopIndex = _ref8.rowStopIndex;\n      var onRowsRendered = this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    }\n  }, {\n    key: \"_setRef\",\n    value: function _setRef(ref) {\n      this.Grid = ref;\n    }\n  }, {\n    key: \"_setScrollbarWidth\",\n    value: function _setScrollbarWidth() {\n      var scrollbarWidth = this.getScrollbarWidth();\n      this.setState({\n        scrollbarWidth: scrollbarWidth\n      });\n    }\n  }]);\n\n  return Table;\n}(React.PureComponent);\n\n_defineProperty(Table, \"defaultProps\", {\n  disableHeader: false,\n  estimatedRowSize: 30,\n  headerHeight: 0,\n  headerStyle: {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  rowRenderer: defaultRowRenderer,\n  headerRowRenderer: defaultHeaderRowRenderer,\n  rowStyle: {},\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\n\nexport { Table as default };\nTable.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** This is just set on the grid top element. */\n  'aria-label': PropTypes.string,\n\n  /** This is just set on the grid top element. */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /** One or more Columns describing the data displayed in this row */\n  children: function children(props) {\n    var children = React.Children.toArray(props.children);\n\n    for (var i = 0; i < children.length; i++) {\n      var childType = children[i].type;\n\n      if (childType !== Column && !(childType.prototype instanceof Column)) {\n        return new Error('Table only accepts children of type Column');\n      }\n    }\n  },\n\n  /** Optional CSS class name */\n  className: PropTypes.string,\n\n  /** Disable rendering the header at all */\n  disableHeader: PropTypes.bool,\n\n  /**\n   * Used to estimate the total height of a Table before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  estimatedRowSize: PropTypes.number.isRequired,\n\n  /** Optional custom CSS class name to attach to inner Grid element. */\n  gridClassName: PropTypes.string,\n\n  /** Optional inline style to attach to inner Grid element. */\n  gridStyle: PropTypes.object,\n\n  /** Optional CSS class to apply to all column headers */\n  headerClassName: PropTypes.string,\n\n  /** Fixed height of header row */\n  headerHeight: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: any[],\n   *   style: any\n   * }): PropTypes.node\n   */\n  headerRowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table header columns. */\n  headerStyle: PropTypes.object,\n\n  /** Fixed/available height for out DOM element */\n  height: PropTypes.number.isRequired,\n\n  /** Optional id */\n  id: PropTypes.string,\n\n  /** Optional renderer to be used in place of table body rows when rowCount is 0 */\n  noRowsRenderer: PropTypes.func,\n\n  /**\n   * Optional callback when a column is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onColumnClick: PropTypes.func,\n\n  /**\n   * Optional callback when a column's header is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onHeaderClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user double-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowDoubleClick: PropTypes.func,\n\n  /**\n   * Callback invoked when the mouse leaves a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOut: PropTypes.func,\n\n  /**\n   * Callback invoked when a user moves the mouse over a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOver: PropTypes.func,\n\n  /**\n   * Callback invoked when a user right-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowRightClick: PropTypes.func,\n\n  /**\n   * Callback invoked with information about the slice of rows that were just rendered.\n   * ({ startIndex, stopIndex }): void\n   */\n  onRowsRendered: PropTypes.func,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, scrollHeight, scrollTop }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  overscanIndicesGetter: PropTypes.func.isRequired,\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  overscanRowCount: PropTypes.number.isRequired,\n\n  /**\n   * Optional CSS class to apply to all table rows (including the header row).\n   * This property can be a CSS class name (string) or a function that returns a class name.\n   * If a function is provided its signature should be: ({ index: number }): string\n   */\n  rowClassName: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n\n  /**\n   * Callback responsible for returning a data row given an index.\n   * ({ index: number }): any\n   */\n  rowGetter: PropTypes.func.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * ({ index: number }): number\n   */\n  rowHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n\n  /** Number of rows in table. */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: Array,\n   *   index: number,\n   *   isScrolling: boolean,\n   *   onRowClick: ?Function,\n   *   onRowDoubleClick: ?Function,\n   *   onRowMouseOver: ?Function,\n   *   onRowMouseOut: ?Function,\n   *   rowData: any,\n   *   style: any\n   * }): PropTypes.node\n   */\n  rowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table rows. */\n  rowStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n\n  /** See Grid#scrollToAlignment */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  scrollToIndex: PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Sort function to be called if a sortable header is clicked.\n   * Should implement the following interface: ({\n   *   defaultSortDirection: 'ASC' | 'DESC',\n   *   event: MouseEvent,\n   *   sortBy: string,\n   *   sortDirection: SortDirection\n   * }): void\n   */\n  sort: PropTypes.func,\n\n  /** Table data is currently sorted by this :dataKey (if it is sorted at all) */\n  sortBy: PropTypes.string,\n\n  /** Table data is currently sorted in this direction (if it is sorted at all) */\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** Optional inline style */\n  style: PropTypes.object,\n\n  /** Tab index for focus */\n  tabIndex: PropTypes.number,\n\n  /** Width of list */\n  width: PropTypes.number.isRequired\n} : {};\nimport { bpfrpt_proptype_CellPosition } from \"../Grid\";"]},"metadata":{},"sourceType":"module"}