{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport CellMeasurerCacheDecorator from './CellMeasurerCacheDecorator';\nimport Grid from '../Grid';\nvar SCROLLBAR_SIZE_BUFFER = 20;\n/**\n * Renders 1, 2, or 4 Grids depending on configuration.\n * A main (body) Grid will always be rendered.\n * Optionally, 1-2 Grids for sticky header rows will also be rendered.\n * If no sticky columns, only 1 sticky header Grid will be rendered.\n * If sticky columns, 2 sticky header Grids will be rendered.\n */\n\nvar MultiGrid = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(MultiGrid, _React$PureComponent);\n\n  function MultiGrid(props, context) {\n    var _this;\n\n    _classCallCheck(this, MultiGrid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MultiGrid).call(this, props, context));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollbarSize: 0,\n      showHorizontalScrollbar: false,\n      showVerticalScrollbar: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateColumnIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateRowIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomLeftGridRef\", function (ref) {\n      _this._bottomLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomRightGridRef\", function (ref) {\n      _this._bottomRightGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomLeftGrid\", function (_ref) {\n      var rowIndex = _ref.rowIndex,\n          rest = _objectWithoutProperties(_ref, [\"rowIndex\"]);\n\n      var _this$props = _this.props,\n          cellRenderer = _this$props.cellRenderer,\n          fixedRowCount = _this$props.fixedRowCount,\n          rowCount = _this$props.rowCount;\n\n      if (rowIndex === rowCount - fixedRowCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            height: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          parent: _assertThisInitialized(_this),\n          rowIndex: rowIndex + fixedRowCount\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomRightGrid\", function (_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex,\n          rest = _objectWithoutProperties(_ref2, [\"columnIndex\", \"rowIndex\"]);\n\n      var _this$props2 = _this.props,\n          cellRenderer = _this$props2.cellRenderer,\n          fixedColumnCount = _this$props2.fixedColumnCount,\n          fixedRowCount = _this$props2.fixedRowCount;\n      return cellRenderer(_objectSpread({}, rest, {\n        columnIndex: columnIndex + fixedColumnCount,\n        parent: _assertThisInitialized(_this),\n        rowIndex: rowIndex + fixedRowCount\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererTopRightGrid\", function (_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rest = _objectWithoutProperties(_ref3, [\"columnIndex\"]);\n\n      var _this$props3 = _this.props,\n          cellRenderer = _this$props3.cellRenderer,\n          columnCount = _this$props3.columnCount,\n          fixedColumnCount = _this$props3.fixedColumnCount;\n\n      if (columnIndex === columnCount - fixedColumnCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            width: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          columnIndex: columnIndex + fixedColumnCount,\n          parent: _assertThisInitialized(_this)\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnWidthRightGrid\", function (_ref4) {\n      var index = _ref4.index;\n      var _this$props4 = _this.props,\n          columnCount = _this$props4.columnCount,\n          fixedColumnCount = _this$props4.fixedColumnCount,\n          columnWidth = _this$props4.columnWidth;\n      var _this$state = _this.state,\n          scrollbarSize = _this$state.scrollbarSize,\n          showHorizontalScrollbar = _this$state.showHorizontalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showHorizontalScrollbar && index === columnCount - fixedColumnCount) {\n        return scrollbarSize;\n      }\n\n      return typeof columnWidth === 'function' ? columnWidth({\n        index: index + fixedColumnCount\n      }) : columnWidth;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft,\n          scrollTop = scrollInfo.scrollTop;\n\n      _this.setState({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      var onScroll = _this.props.onScroll;\n\n      if (onScroll) {\n        onScroll(scrollInfo);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollbarPresenceChange\", function (_ref5) {\n      var horizontal = _ref5.horizontal,\n          size = _ref5.size,\n          vertical = _ref5.vertical;\n      var _this$state2 = _this.state,\n          showHorizontalScrollbar = _this$state2.showHorizontalScrollbar,\n          showVerticalScrollbar = _this$state2.showVerticalScrollbar;\n\n      if (horizontal !== showHorizontalScrollbar || vertical !== showVerticalScrollbar) {\n        _this.setState({\n          scrollbarSize: size,\n          showHorizontalScrollbar: horizontal,\n          showVerticalScrollbar: vertical\n        });\n\n        var onScrollbarPresenceChange = _this.props.onScrollbarPresenceChange;\n\n        if (typeof onScrollbarPresenceChange === 'function') {\n          onScrollbarPresenceChange({\n            horizontal: horizontal,\n            size: size,\n            vertical: vertical\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollLeft\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft;\n\n      _this._onScroll({\n        scrollLeft: scrollLeft,\n        scrollTop: _this.state.scrollTop\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollTop\", function (scrollInfo) {\n      var scrollTop = scrollInfo.scrollTop;\n\n      _this._onScroll({\n        scrollTop: scrollTop,\n        scrollLeft: _this.state.scrollLeft\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowHeightBottomGrid\", function (_ref6) {\n      var index = _ref6.index;\n      var _this$props5 = _this.props,\n          fixedRowCount = _this$props5.fixedRowCount,\n          rowCount = _this$props5.rowCount,\n          rowHeight = _this$props5.rowHeight;\n      var _this$state3 = _this.state,\n          scrollbarSize = _this$state3.scrollbarSize,\n          showVerticalScrollbar = _this$state3.showVerticalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showVerticalScrollbar && index === rowCount - fixedRowCount) {\n        return scrollbarSize;\n      }\n\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: index + fixedRowCount\n      }) : rowHeight;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topLeftGridRef\", function (ref) {\n      _this._topLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topRightGridRef\", function (ref) {\n      _this._topRightGrid = ref;\n    });\n\n    var deferredMeasurementCache = props.deferredMeasurementCache,\n        _fixedColumnCount = props.fixedColumnCount,\n        _fixedRowCount = props.fixedRowCount;\n\n    _this._maybeCalculateCachedStyles(true);\n\n    if (deferredMeasurementCache) {\n      _this._deferredMeasurementCacheBottomLeftGrid = _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: 0,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheBottomRightGrid = _fixedColumnCount > 0 || _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheTopRightGrid = _fixedColumnCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: 0\n      }) : deferredMeasurementCache;\n    }\n\n    return _this;\n  }\n\n  _createClass(MultiGrid, [{\n    key: \"forceUpdateGrids\",\n    value: function forceUpdateGrids() {\n      this._bottomLeftGrid && this._bottomLeftGrid.forceUpdate();\n      this._bottomRightGrid && this._bottomRightGrid.forceUpdate();\n      this._topLeftGrid && this._topLeftGrid.forceUpdate();\n      this._topRightGrid && this._topRightGrid.forceUpdate();\n    }\n    /** See Grid#invalidateCellSizeAfterRender */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender() {\n      var _ref7 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref7$columnIndex = _ref7.columnIndex,\n          columnIndex = _ref7$columnIndex === void 0 ? 0 : _ref7$columnIndex,\n          _ref7$rowIndex = _ref7.rowIndex,\n          rowIndex = _ref7$rowIndex === void 0 ? 0 : _ref7$rowIndex;\n\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      this._bottomLeftGrid && this._bottomLeftGrid.measureAllCells();\n      this._bottomRightGrid && this._bottomRightGrid.measureAllCells();\n      this._topLeftGrid && this._topLeftGrid.measureAllCells();\n      this._topRightGrid && this._topRightGrid.measureAllCells();\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref8 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref8$columnIndex = _ref8.columnIndex,\n          columnIndex = _ref8$columnIndex === void 0 ? 0 : _ref8$columnIndex,\n          _ref8$rowIndex = _ref8.rowIndex,\n          rowIndex = _ref8$rowIndex === void 0 ? 0 : _ref8$rowIndex;\n\n      var _this$props6 = this.props,\n          fixedColumnCount = _this$props6.fixedColumnCount,\n          fixedRowCount = _this$props6.fixedRowCount;\n      var adjustedColumnIndex = Math.max(0, columnIndex - fixedColumnCount);\n      var adjustedRowIndex = Math.max(0, rowIndex - fixedRowCount);\n      this._bottomLeftGrid && this._bottomLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._bottomRightGrid && this._bottomRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._topLeftGrid && this._topLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: rowIndex\n      });\n      this._topRightGrid && this._topRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: rowIndex\n      });\n      this._leftGridWidth = null;\n      this._topGridHeight = null;\n\n      this._maybeCalculateCachedStyles(true);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props7 = this.props,\n          scrollLeft = _this$props7.scrollLeft,\n          scrollTop = _this$props7.scrollTop;\n\n      if (scrollLeft > 0 || scrollTop > 0) {\n        var newState = {};\n\n        if (scrollLeft > 0) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop > 0) {\n          newState.scrollTop = scrollTop;\n        }\n\n        this.setState(newState);\n      }\n\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props8 = this.props,\n          onScroll = _this$props8.onScroll,\n          onSectionRendered = _this$props8.onSectionRendered,\n          onScrollbarPresenceChange = _this$props8.onScrollbarPresenceChange,\n          scrollLeftProp = _this$props8.scrollLeft,\n          scrollToColumn = _this$props8.scrollToColumn,\n          scrollTopProp = _this$props8.scrollTop,\n          scrollToRow = _this$props8.scrollToRow,\n          rest = _objectWithoutProperties(_this$props8, [\"onScroll\", \"onSectionRendered\", \"onScrollbarPresenceChange\", \"scrollLeft\", \"scrollToColumn\", \"scrollTop\", \"scrollToRow\"]);\n\n      this._prepareForRender(); // Don't render any of our Grids if there are no cells.\n      // This mirrors what Grid does,\n      // And prevents us from recording inaccurage measurements when used with CellMeasurer.\n\n\n      if (this.props.width === 0 || this.props.height === 0) {\n        return null;\n      } // scrollTop and scrollLeft props are explicitly filtered out and ignored\n\n\n      var _this$state4 = this.state,\n          scrollLeft = _this$state4.scrollLeft,\n          scrollTop = _this$state4.scrollTop;\n      return React.createElement(\"div\", {\n        style: this._containerOuterStyle\n      }, React.createElement(\"div\", {\n        style: this._containerTopStyle\n      }, this._renderTopLeftGrid(rest), this._renderTopRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollLeft: scrollLeft\n      }))), React.createElement(\"div\", {\n        style: this._containerBottomStyle\n      }, this._renderBottomLeftGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollTop: scrollTop\n      })), this._renderBottomRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        onSectionRendered: onSectionRendered,\n        scrollLeft: scrollLeft,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow,\n        scrollTop: scrollTop\n      }))));\n    }\n  }, {\n    key: \"_getBottomGridHeight\",\n    value: function _getBottomGridHeight(props) {\n      var height = props.height;\n\n      var topGridHeight = this._getTopGridHeight(props);\n\n      return height - topGridHeight;\n    }\n  }, {\n    key: \"_getLeftGridWidth\",\n    value: function _getLeftGridWidth(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          columnWidth = props.columnWidth;\n\n      if (this._leftGridWidth == null) {\n        if (typeof columnWidth === 'function') {\n          var leftGridWidth = 0;\n\n          for (var index = 0; index < fixedColumnCount; index++) {\n            leftGridWidth += columnWidth({\n              index: index\n            });\n          }\n\n          this._leftGridWidth = leftGridWidth;\n        } else {\n          this._leftGridWidth = columnWidth * fixedColumnCount;\n        }\n      }\n\n      return this._leftGridWidth;\n    }\n  }, {\n    key: \"_getRightGridWidth\",\n    value: function _getRightGridWidth(props) {\n      var width = props.width;\n\n      var leftGridWidth = this._getLeftGridWidth(props);\n\n      return width - leftGridWidth;\n    }\n  }, {\n    key: \"_getTopGridHeight\",\n    value: function _getTopGridHeight(props) {\n      var fixedRowCount = props.fixedRowCount,\n          rowHeight = props.rowHeight;\n\n      if (this._topGridHeight == null) {\n        if (typeof rowHeight === 'function') {\n          var topGridHeight = 0;\n\n          for (var index = 0; index < fixedRowCount; index++) {\n            topGridHeight += rowHeight({\n              index: index\n            });\n          }\n\n          this._topGridHeight = topGridHeight;\n        } else {\n          this._topGridHeight = rowHeight * fixedRowCount;\n        }\n      }\n\n      return this._topGridHeight;\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n        this.forceUpdate();\n      }\n    }\n    /**\n     * Avoid recreating inline styles each render; this bypasses Grid's shallowCompare.\n     * This method recalculates styles only when specific props change.\n     */\n\n  }, {\n    key: \"_maybeCalculateCachedStyles\",\n    value: function _maybeCalculateCachedStyles(resetAll) {\n      var _this$props9 = this.props,\n          columnWidth = _this$props9.columnWidth,\n          enableFixedColumnScroll = _this$props9.enableFixedColumnScroll,\n          enableFixedRowScroll = _this$props9.enableFixedRowScroll,\n          height = _this$props9.height,\n          fixedColumnCount = _this$props9.fixedColumnCount,\n          fixedRowCount = _this$props9.fixedRowCount,\n          rowHeight = _this$props9.rowHeight,\n          style = _this$props9.style,\n          styleBottomLeftGrid = _this$props9.styleBottomLeftGrid,\n          styleBottomRightGrid = _this$props9.styleBottomRightGrid,\n          styleTopLeftGrid = _this$props9.styleTopLeftGrid,\n          styleTopRightGrid = _this$props9.styleTopRightGrid,\n          width = _this$props9.width;\n      var sizeChange = resetAll || height !== this._lastRenderedHeight || width !== this._lastRenderedWidth;\n      var leftSizeChange = resetAll || columnWidth !== this._lastRenderedColumnWidth || fixedColumnCount !== this._lastRenderedFixedColumnCount;\n      var topSizeChange = resetAll || fixedRowCount !== this._lastRenderedFixedRowCount || rowHeight !== this._lastRenderedRowHeight;\n\n      if (resetAll || sizeChange || style !== this._lastRenderedStyle) {\n        this._containerOuterStyle = _objectSpread({\n          height: height,\n          overflow: 'visible',\n          // Let :focus outline show through\n          width: width\n        }, style);\n      }\n\n      if (resetAll || sizeChange || topSizeChange) {\n        this._containerTopStyle = {\n          height: this._getTopGridHeight(this.props),\n          position: 'relative',\n          width: width\n        };\n        this._containerBottomStyle = {\n          height: height - this._getTopGridHeight(this.props),\n          overflow: 'visible',\n          // Let :focus outline show through\n          position: 'relative',\n          width: width\n        };\n      }\n\n      if (resetAll || styleBottomLeftGrid !== this._lastRenderedStyleBottomLeftGrid) {\n        this._bottomLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: enableFixedColumnScroll ? 'auto' : 'hidden',\n          position: 'absolute'\n        }, styleBottomLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleBottomRightGrid !== this._lastRenderedStyleBottomRightGrid) {\n        this._bottomRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          position: 'absolute'\n        }, styleBottomRightGrid);\n      }\n\n      if (resetAll || styleTopLeftGrid !== this._lastRenderedStyleTopLeftGrid) {\n        this._topLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleTopRightGrid !== this._lastRenderedStyleTopRightGrid) {\n        this._topRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          overflowX: enableFixedRowScroll ? 'auto' : 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopRightGrid);\n      }\n\n      this._lastRenderedColumnWidth = columnWidth;\n      this._lastRenderedFixedColumnCount = fixedColumnCount;\n      this._lastRenderedFixedRowCount = fixedRowCount;\n      this._lastRenderedHeight = height;\n      this._lastRenderedRowHeight = rowHeight;\n      this._lastRenderedStyle = style;\n      this._lastRenderedStyleBottomLeftGrid = styleBottomLeftGrid;\n      this._lastRenderedStyleBottomRightGrid = styleBottomRightGrid;\n      this._lastRenderedStyleTopLeftGrid = styleTopLeftGrid;\n      this._lastRenderedStyleTopRightGrid = styleTopRightGrid;\n      this._lastRenderedWidth = width;\n    }\n  }, {\n    key: \"_prepareForRender\",\n    value: function _prepareForRender() {\n      if (this._lastRenderedColumnWidth !== this.props.columnWidth || this._lastRenderedFixedColumnCount !== this.props.fixedColumnCount) {\n        this._leftGridWidth = null;\n      }\n\n      if (this._lastRenderedFixedRowCount !== this.props.fixedRowCount || this._lastRenderedRowHeight !== this.props.rowHeight) {\n        this._topGridHeight = null;\n      }\n\n      this._maybeCalculateCachedStyles();\n\n      this._lastRenderedColumnWidth = this.props.columnWidth;\n      this._lastRenderedFixedColumnCount = this.props.fixedColumnCount;\n      this._lastRenderedFixedRowCount = this.props.fixedRowCount;\n      this._lastRenderedRowHeight = this.props.rowHeight;\n    }\n  }, {\n    key: \"_renderBottomLeftGrid\",\n    value: function _renderBottomLeftGrid(props) {\n      var enableFixedColumnScroll = props.enableFixedColumnScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          hideBottomLeftGridScrollbar = props.hideBottomLeftGridScrollbar;\n      var showVerticalScrollbar = this.state.showVerticalScrollbar;\n\n      if (!fixedColumnCount) {\n        return null;\n      }\n\n      var additionalRowCount = showVerticalScrollbar ? 1 : 0,\n          height = this._getBottomGridHeight(props),\n          width = this._getLeftGridWidth(props),\n          scrollbarSize = this.state.showVerticalScrollbar ? this.state.scrollbarSize : 0,\n          gridWidth = hideBottomLeftGridScrollbar ? width + scrollbarSize : width;\n\n      var bottomLeftGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomLeftGrid,\n        className: this.props.classNameBottomLeftGrid,\n        columnCount: fixedColumnCount,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomLeftGrid,\n        height: height,\n        onScroll: enableFixedColumnScroll ? this._onScrollTop : undefined,\n        ref: this._bottomLeftGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount) + additionalRowCount,\n        rowHeight: this._rowHeightBottomGrid,\n        style: this._bottomLeftGridStyle,\n        tabIndex: null,\n        width: gridWidth\n      }));\n\n      if (hideBottomLeftGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"BottomLeftGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._bottomLeftGridStyle, {\n            height: height,\n            width: width,\n            overflowY: 'hidden'\n          })\n        }, bottomLeftGrid);\n      }\n\n      return bottomLeftGrid;\n    }\n  }, {\n    key: \"_renderBottomRightGrid\",\n    value: function _renderBottomRightGrid(props) {\n      var columnCount = props.columnCount,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          scrollToColumn = props.scrollToColumn,\n          scrollToRow = props.scrollToRow;\n      return React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomRightGrid,\n        className: this.props.classNameBottomRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount),\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomRightGrid,\n        height: this._getBottomGridHeight(props),\n        onScroll: this._onScroll,\n        onScrollbarPresenceChange: this._onScrollbarPresenceChange,\n        ref: this._bottomRightGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount),\n        rowHeight: this._rowHeightBottomGrid,\n        scrollToColumn: scrollToColumn - fixedColumnCount,\n        scrollToRow: scrollToRow - fixedRowCount,\n        style: this._bottomRightGridStyle,\n        width: this._getRightGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopLeftGrid\",\n    value: function _renderTopLeftGrid(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount;\n\n      if (!fixedColumnCount || !fixedRowCount) {\n        return null;\n      }\n\n      return React.createElement(Grid, _extends({}, props, {\n        className: this.props.classNameTopLeftGrid,\n        columnCount: fixedColumnCount,\n        height: this._getTopGridHeight(props),\n        ref: this._topLeftGridRef,\n        rowCount: fixedRowCount,\n        style: this._topLeftGridStyle,\n        tabIndex: null,\n        width: this._getLeftGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopRightGrid\",\n    value: function _renderTopRightGrid(props) {\n      var columnCount = props.columnCount,\n          enableFixedRowScroll = props.enableFixedRowScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          scrollLeft = props.scrollLeft,\n          hideTopRightGridScrollbar = props.hideTopRightGridScrollbar;\n      var _this$state5 = this.state,\n          showHorizontalScrollbar = _this$state5.showHorizontalScrollbar,\n          scrollbarSize = _this$state5.scrollbarSize;\n\n      if (!fixedRowCount) {\n        return null;\n      }\n\n      var additionalColumnCount = showHorizontalScrollbar ? 1 : 0,\n          height = this._getTopGridHeight(props),\n          width = this._getRightGridWidth(props),\n          additionalHeight = showHorizontalScrollbar ? scrollbarSize : 0;\n\n      var gridHeight = height,\n          style = this._topRightGridStyle;\n\n      if (hideTopRightGridScrollbar) {\n        gridHeight = height + additionalHeight;\n        style = _objectSpread({}, this._topRightGridStyle, {\n          left: 0\n        });\n      }\n\n      var topRightGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererTopRightGrid,\n        className: this.props.classNameTopRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount) + additionalColumnCount,\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheTopRightGrid,\n        height: gridHeight,\n        onScroll: enableFixedRowScroll ? this._onScrollLeft : undefined,\n        ref: this._topRightGridRef,\n        rowCount: fixedRowCount,\n        scrollLeft: scrollLeft,\n        style: style,\n        tabIndex: null,\n        width: width\n      }));\n\n      if (hideTopRightGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"TopRightGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._topRightGridStyle, {\n            height: height,\n            width: width,\n            overflowX: 'hidden'\n          })\n        }, topRightGrid);\n      }\n\n      return topRightGrid;\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null && nextProps.scrollLeft >= 0 ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null && nextProps.scrollTop >= 0 ? nextProps.scrollTop : prevState.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return MultiGrid;\n}(React.PureComponent);\n\n_defineProperty(MultiGrid, \"defaultProps\", {\n  classNameBottomLeftGrid: '',\n  classNameBottomRightGrid: '',\n  classNameTopLeftGrid: '',\n  classNameTopRightGrid: '',\n  enableFixedColumnScroll: false,\n  enableFixedRowScroll: false,\n  fixedColumnCount: 0,\n  fixedRowCount: 0,\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  styleBottomLeftGrid: {},\n  styleBottomRightGrid: {},\n  styleTopLeftGrid: {},\n  styleTopRightGrid: {},\n  hideTopRightGridScrollbar: false,\n  hideBottomLeftGridScrollbar: false\n});\n\nMultiGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  classNameBottomLeftGrid: PropTypes.string.isRequired,\n  classNameBottomRightGrid: PropTypes.string.isRequired,\n  classNameTopLeftGrid: PropTypes.string.isRequired,\n  classNameTopRightGrid: PropTypes.string.isRequired,\n  enableFixedColumnScroll: PropTypes.bool.isRequired,\n  enableFixedRowScroll: PropTypes.bool.isRequired,\n  fixedColumnCount: PropTypes.number.isRequired,\n  fixedRowCount: PropTypes.number.isRequired,\n  onScrollbarPresenceChange: PropTypes.func,\n  style: PropTypes.object.isRequired,\n  styleBottomLeftGrid: PropTypes.object.isRequired,\n  styleBottomRightGrid: PropTypes.object.isRequired,\n  styleTopLeftGrid: PropTypes.object.isRequired,\n  styleTopRightGrid: PropTypes.object.isRequired,\n  hideTopRightGridScrollbar: PropTypes.bool,\n  hideBottomLeftGridScrollbar: PropTypes.bool\n} : {};\npolyfill(MultiGrid);\nexport default MultiGrid;","map":{"version":3,"sources":["/home/ycali/dev/CONSULTORIO/web/node_modules/react-virtualized/dist/es/MultiGrid/MultiGrid.js"],"names":["_extends","_objectWithoutProperties","_classCallCheck","_createClass","_possibleConstructorReturn","_getPrototypeOf","_assertThisInitialized","_inherits","_defineProperty","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","PropTypes","React","polyfill","CellMeasurerCacheDecorator","Grid","SCROLLBAR_SIZE_BUFFER","MultiGrid","_React$PureComponent","props","context","_this","call","scrollLeft","scrollTop","scrollbarSize","showHorizontalScrollbar","showVerticalScrollbar","ref","_bottomLeftGrid","_bottomRightGrid","_ref","rowIndex","rest","_this$props","cellRenderer","fixedRowCount","rowCount","createElement","style","height","parent","_ref2","columnIndex","_this$props2","fixedColumnCount","_ref3","_this$props3","columnCount","width","_ref4","index","_this$props4","columnWidth","_this$state","state","scrollInfo","setState","onScroll","_ref5","horizontal","size","vertical","_this$state2","onScrollbarPresenceChange","_onScroll","_ref6","_this$props5","rowHeight","_this$state3","_topLeftGrid","_topRightGrid","deferredMeasurementCache","_fixedColumnCount","_fixedRowCount","_maybeCalculateCachedStyles","_deferredMeasurementCacheBottomLeftGrid","cellMeasurerCache","columnIndexOffset","rowIndexOffset","_deferredMeasurementCacheBottomRightGrid","_deferredMeasurementCacheTopRightGrid","value","forceUpdateGrids","forceUpdate","invalidateCellSizeAfterRender","_ref7","undefined","_ref7$columnIndex","_ref7$rowIndex","_deferredInvalidateColumnIndex","Math","min","_deferredInvalidateRowIndex","measureAllCells","recomputeGridSize","_ref8","_ref8$columnIndex","_ref8$rowIndex","_this$props6","adjustedColumnIndex","max","adjustedRowIndex","_leftGridWidth","_topGridHeight","componentDidMount","_this$props7","newState","_handleInvalidatedGridSize","componentDidUpdate","render","_this$props8","onSectionRendered","scrollLeftProp","scrollToColumn","scrollTopProp","scrollToRow","_prepareForRender","_this$state4","_containerOuterStyle","_containerTopStyle","_renderTopLeftGrid","_renderTopRightGrid","_containerBottomStyle","_renderBottomLeftGrid","_renderBottomRightGrid","_getBottomGridHeight","topGridHeight","_getTopGridHeight","_getLeftGridWidth","leftGridWidth","_getRightGridWidth","resetAll","_this$props9","enableFixedColumnScroll","enableFixedRowScroll","styleBottomLeftGrid","styleBottomRightGrid","styleTopLeftGrid","styleTopRightGrid","sizeChange","_lastRenderedHeight","_lastRenderedWidth","leftSizeChange","_lastRenderedColumnWidth","_lastRenderedFixedColumnCount","topSizeChange","_lastRenderedFixedRowCount","_lastRenderedRowHeight","_lastRenderedStyle","overflow","position","_lastRenderedStyleBottomLeftGrid","_bottomLeftGridStyle","left","overflowX","overflowY","_lastRenderedStyleBottomRightGrid","_bottomRightGridStyle","_lastRenderedStyleTopLeftGrid","_topLeftGridStyle","top","_lastRenderedStyleTopRightGrid","_topRightGridStyle","hideBottomLeftGridScrollbar","additionalRowCount","gridWidth","bottomLeftGrid","_cellRendererBottomLeftGrid","className","classNameBottomLeftGrid","_onScrollTop","_bottomLeftGridRef","_rowHeightBottomGrid","tabIndex","_cellRendererBottomRightGrid","classNameBottomRightGrid","_columnWidthRightGrid","_onScrollbarPresenceChange","_bottomRightGridRef","classNameTopLeftGrid","_topLeftGridRef","hideTopRightGridScrollbar","_this$state5","additionalColumnCount","additionalHeight","gridHeight","topRightGrid","_cellRendererTopRightGrid","classNameTopRightGrid","_onScrollLeft","_topRightGridRef","getDerivedStateFromProps","nextProps","prevState","PureComponent","propTypes","process","env","NODE_ENV","string","isRequired","bool","number","func"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport CellMeasurerCacheDecorator from './CellMeasurerCacheDecorator';\nimport Grid from '../Grid';\nvar SCROLLBAR_SIZE_BUFFER = 20;\n/**\n * Renders 1, 2, or 4 Grids depending on configuration.\n * A main (body) Grid will always be rendered.\n * Optionally, 1-2 Grids for sticky header rows will also be rendered.\n * If no sticky columns, only 1 sticky header Grid will be rendered.\n * If sticky columns, 2 sticky header Grids will be rendered.\n */\n\nvar MultiGrid =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(MultiGrid, _React$PureComponent);\n\n  function MultiGrid(props, context) {\n    var _this;\n\n    _classCallCheck(this, MultiGrid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MultiGrid).call(this, props, context));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollbarSize: 0,\n      showHorizontalScrollbar: false,\n      showVerticalScrollbar: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateColumnIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateRowIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomLeftGridRef\", function (ref) {\n      _this._bottomLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomRightGridRef\", function (ref) {\n      _this._bottomRightGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomLeftGrid\", function (_ref) {\n      var rowIndex = _ref.rowIndex,\n          rest = _objectWithoutProperties(_ref, [\"rowIndex\"]);\n\n      var _this$props = _this.props,\n          cellRenderer = _this$props.cellRenderer,\n          fixedRowCount = _this$props.fixedRowCount,\n          rowCount = _this$props.rowCount;\n\n      if (rowIndex === rowCount - fixedRowCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            height: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          parent: _assertThisInitialized(_this),\n          rowIndex: rowIndex + fixedRowCount\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomRightGrid\", function (_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex,\n          rest = _objectWithoutProperties(_ref2, [\"columnIndex\", \"rowIndex\"]);\n\n      var _this$props2 = _this.props,\n          cellRenderer = _this$props2.cellRenderer,\n          fixedColumnCount = _this$props2.fixedColumnCount,\n          fixedRowCount = _this$props2.fixedRowCount;\n      return cellRenderer(_objectSpread({}, rest, {\n        columnIndex: columnIndex + fixedColumnCount,\n        parent: _assertThisInitialized(_this),\n        rowIndex: rowIndex + fixedRowCount\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererTopRightGrid\", function (_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rest = _objectWithoutProperties(_ref3, [\"columnIndex\"]);\n\n      var _this$props3 = _this.props,\n          cellRenderer = _this$props3.cellRenderer,\n          columnCount = _this$props3.columnCount,\n          fixedColumnCount = _this$props3.fixedColumnCount;\n\n      if (columnIndex === columnCount - fixedColumnCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            width: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          columnIndex: columnIndex + fixedColumnCount,\n          parent: _assertThisInitialized(_this)\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnWidthRightGrid\", function (_ref4) {\n      var index = _ref4.index;\n      var _this$props4 = _this.props,\n          columnCount = _this$props4.columnCount,\n          fixedColumnCount = _this$props4.fixedColumnCount,\n          columnWidth = _this$props4.columnWidth;\n      var _this$state = _this.state,\n          scrollbarSize = _this$state.scrollbarSize,\n          showHorizontalScrollbar = _this$state.showHorizontalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showHorizontalScrollbar && index === columnCount - fixedColumnCount) {\n        return scrollbarSize;\n      }\n\n      return typeof columnWidth === 'function' ? columnWidth({\n        index: index + fixedColumnCount\n      }) : columnWidth;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft,\n          scrollTop = scrollInfo.scrollTop;\n\n      _this.setState({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      var onScroll = _this.props.onScroll;\n\n      if (onScroll) {\n        onScroll(scrollInfo);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollbarPresenceChange\", function (_ref5) {\n      var horizontal = _ref5.horizontal,\n          size = _ref5.size,\n          vertical = _ref5.vertical;\n      var _this$state2 = _this.state,\n          showHorizontalScrollbar = _this$state2.showHorizontalScrollbar,\n          showVerticalScrollbar = _this$state2.showVerticalScrollbar;\n\n      if (horizontal !== showHorizontalScrollbar || vertical !== showVerticalScrollbar) {\n        _this.setState({\n          scrollbarSize: size,\n          showHorizontalScrollbar: horizontal,\n          showVerticalScrollbar: vertical\n        });\n\n        var onScrollbarPresenceChange = _this.props.onScrollbarPresenceChange;\n\n        if (typeof onScrollbarPresenceChange === 'function') {\n          onScrollbarPresenceChange({\n            horizontal: horizontal,\n            size: size,\n            vertical: vertical\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollLeft\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft;\n\n      _this._onScroll({\n        scrollLeft: scrollLeft,\n        scrollTop: _this.state.scrollTop\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollTop\", function (scrollInfo) {\n      var scrollTop = scrollInfo.scrollTop;\n\n      _this._onScroll({\n        scrollTop: scrollTop,\n        scrollLeft: _this.state.scrollLeft\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowHeightBottomGrid\", function (_ref6) {\n      var index = _ref6.index;\n      var _this$props5 = _this.props,\n          fixedRowCount = _this$props5.fixedRowCount,\n          rowCount = _this$props5.rowCount,\n          rowHeight = _this$props5.rowHeight;\n      var _this$state3 = _this.state,\n          scrollbarSize = _this$state3.scrollbarSize,\n          showVerticalScrollbar = _this$state3.showVerticalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showVerticalScrollbar && index === rowCount - fixedRowCount) {\n        return scrollbarSize;\n      }\n\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: index + fixedRowCount\n      }) : rowHeight;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topLeftGridRef\", function (ref) {\n      _this._topLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topRightGridRef\", function (ref) {\n      _this._topRightGrid = ref;\n    });\n\n    var deferredMeasurementCache = props.deferredMeasurementCache,\n        _fixedColumnCount = props.fixedColumnCount,\n        _fixedRowCount = props.fixedRowCount;\n\n    _this._maybeCalculateCachedStyles(true);\n\n    if (deferredMeasurementCache) {\n      _this._deferredMeasurementCacheBottomLeftGrid = _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: 0,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheBottomRightGrid = _fixedColumnCount > 0 || _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheTopRightGrid = _fixedColumnCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: 0\n      }) : deferredMeasurementCache;\n    }\n\n    return _this;\n  }\n\n  _createClass(MultiGrid, [{\n    key: \"forceUpdateGrids\",\n    value: function forceUpdateGrids() {\n      this._bottomLeftGrid && this._bottomLeftGrid.forceUpdate();\n      this._bottomRightGrid && this._bottomRightGrid.forceUpdate();\n      this._topLeftGrid && this._topLeftGrid.forceUpdate();\n      this._topRightGrid && this._topRightGrid.forceUpdate();\n    }\n    /** See Grid#invalidateCellSizeAfterRender */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender() {\n      var _ref7 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref7$columnIndex = _ref7.columnIndex,\n          columnIndex = _ref7$columnIndex === void 0 ? 0 : _ref7$columnIndex,\n          _ref7$rowIndex = _ref7.rowIndex,\n          rowIndex = _ref7$rowIndex === void 0 ? 0 : _ref7$rowIndex;\n\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      this._bottomLeftGrid && this._bottomLeftGrid.measureAllCells();\n      this._bottomRightGrid && this._bottomRightGrid.measureAllCells();\n      this._topLeftGrid && this._topLeftGrid.measureAllCells();\n      this._topRightGrid && this._topRightGrid.measureAllCells();\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref8 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref8$columnIndex = _ref8.columnIndex,\n          columnIndex = _ref8$columnIndex === void 0 ? 0 : _ref8$columnIndex,\n          _ref8$rowIndex = _ref8.rowIndex,\n          rowIndex = _ref8$rowIndex === void 0 ? 0 : _ref8$rowIndex;\n\n      var _this$props6 = this.props,\n          fixedColumnCount = _this$props6.fixedColumnCount,\n          fixedRowCount = _this$props6.fixedRowCount;\n      var adjustedColumnIndex = Math.max(0, columnIndex - fixedColumnCount);\n      var adjustedRowIndex = Math.max(0, rowIndex - fixedRowCount);\n      this._bottomLeftGrid && this._bottomLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._bottomRightGrid && this._bottomRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._topLeftGrid && this._topLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: rowIndex\n      });\n      this._topRightGrid && this._topRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: rowIndex\n      });\n      this._leftGridWidth = null;\n      this._topGridHeight = null;\n\n      this._maybeCalculateCachedStyles(true);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props7 = this.props,\n          scrollLeft = _this$props7.scrollLeft,\n          scrollTop = _this$props7.scrollTop;\n\n      if (scrollLeft > 0 || scrollTop > 0) {\n        var newState = {};\n\n        if (scrollLeft > 0) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop > 0) {\n          newState.scrollTop = scrollTop;\n        }\n\n        this.setState(newState);\n      }\n\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props8 = this.props,\n          onScroll = _this$props8.onScroll,\n          onSectionRendered = _this$props8.onSectionRendered,\n          onScrollbarPresenceChange = _this$props8.onScrollbarPresenceChange,\n          scrollLeftProp = _this$props8.scrollLeft,\n          scrollToColumn = _this$props8.scrollToColumn,\n          scrollTopProp = _this$props8.scrollTop,\n          scrollToRow = _this$props8.scrollToRow,\n          rest = _objectWithoutProperties(_this$props8, [\"onScroll\", \"onSectionRendered\", \"onScrollbarPresenceChange\", \"scrollLeft\", \"scrollToColumn\", \"scrollTop\", \"scrollToRow\"]);\n\n      this._prepareForRender(); // Don't render any of our Grids if there are no cells.\n      // This mirrors what Grid does,\n      // And prevents us from recording inaccurage measurements when used with CellMeasurer.\n\n\n      if (this.props.width === 0 || this.props.height === 0) {\n        return null;\n      } // scrollTop and scrollLeft props are explicitly filtered out and ignored\n\n\n      var _this$state4 = this.state,\n          scrollLeft = _this$state4.scrollLeft,\n          scrollTop = _this$state4.scrollTop;\n      return React.createElement(\"div\", {\n        style: this._containerOuterStyle\n      }, React.createElement(\"div\", {\n        style: this._containerTopStyle\n      }, this._renderTopLeftGrid(rest), this._renderTopRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollLeft: scrollLeft\n      }))), React.createElement(\"div\", {\n        style: this._containerBottomStyle\n      }, this._renderBottomLeftGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollTop: scrollTop\n      })), this._renderBottomRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        onSectionRendered: onSectionRendered,\n        scrollLeft: scrollLeft,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow,\n        scrollTop: scrollTop\n      }))));\n    }\n  }, {\n    key: \"_getBottomGridHeight\",\n    value: function _getBottomGridHeight(props) {\n      var height = props.height;\n\n      var topGridHeight = this._getTopGridHeight(props);\n\n      return height - topGridHeight;\n    }\n  }, {\n    key: \"_getLeftGridWidth\",\n    value: function _getLeftGridWidth(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          columnWidth = props.columnWidth;\n\n      if (this._leftGridWidth == null) {\n        if (typeof columnWidth === 'function') {\n          var leftGridWidth = 0;\n\n          for (var index = 0; index < fixedColumnCount; index++) {\n            leftGridWidth += columnWidth({\n              index: index\n            });\n          }\n\n          this._leftGridWidth = leftGridWidth;\n        } else {\n          this._leftGridWidth = columnWidth * fixedColumnCount;\n        }\n      }\n\n      return this._leftGridWidth;\n    }\n  }, {\n    key: \"_getRightGridWidth\",\n    value: function _getRightGridWidth(props) {\n      var width = props.width;\n\n      var leftGridWidth = this._getLeftGridWidth(props);\n\n      return width - leftGridWidth;\n    }\n  }, {\n    key: \"_getTopGridHeight\",\n    value: function _getTopGridHeight(props) {\n      var fixedRowCount = props.fixedRowCount,\n          rowHeight = props.rowHeight;\n\n      if (this._topGridHeight == null) {\n        if (typeof rowHeight === 'function') {\n          var topGridHeight = 0;\n\n          for (var index = 0; index < fixedRowCount; index++) {\n            topGridHeight += rowHeight({\n              index: index\n            });\n          }\n\n          this._topGridHeight = topGridHeight;\n        } else {\n          this._topGridHeight = rowHeight * fixedRowCount;\n        }\n      }\n\n      return this._topGridHeight;\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n        this.forceUpdate();\n      }\n    }\n    /**\n     * Avoid recreating inline styles each render; this bypasses Grid's shallowCompare.\n     * This method recalculates styles only when specific props change.\n     */\n\n  }, {\n    key: \"_maybeCalculateCachedStyles\",\n    value: function _maybeCalculateCachedStyles(resetAll) {\n      var _this$props9 = this.props,\n          columnWidth = _this$props9.columnWidth,\n          enableFixedColumnScroll = _this$props9.enableFixedColumnScroll,\n          enableFixedRowScroll = _this$props9.enableFixedRowScroll,\n          height = _this$props9.height,\n          fixedColumnCount = _this$props9.fixedColumnCount,\n          fixedRowCount = _this$props9.fixedRowCount,\n          rowHeight = _this$props9.rowHeight,\n          style = _this$props9.style,\n          styleBottomLeftGrid = _this$props9.styleBottomLeftGrid,\n          styleBottomRightGrid = _this$props9.styleBottomRightGrid,\n          styleTopLeftGrid = _this$props9.styleTopLeftGrid,\n          styleTopRightGrid = _this$props9.styleTopRightGrid,\n          width = _this$props9.width;\n      var sizeChange = resetAll || height !== this._lastRenderedHeight || width !== this._lastRenderedWidth;\n      var leftSizeChange = resetAll || columnWidth !== this._lastRenderedColumnWidth || fixedColumnCount !== this._lastRenderedFixedColumnCount;\n      var topSizeChange = resetAll || fixedRowCount !== this._lastRenderedFixedRowCount || rowHeight !== this._lastRenderedRowHeight;\n\n      if (resetAll || sizeChange || style !== this._lastRenderedStyle) {\n        this._containerOuterStyle = _objectSpread({\n          height: height,\n          overflow: 'visible',\n          // Let :focus outline show through\n          width: width\n        }, style);\n      }\n\n      if (resetAll || sizeChange || topSizeChange) {\n        this._containerTopStyle = {\n          height: this._getTopGridHeight(this.props),\n          position: 'relative',\n          width: width\n        };\n        this._containerBottomStyle = {\n          height: height - this._getTopGridHeight(this.props),\n          overflow: 'visible',\n          // Let :focus outline show through\n          position: 'relative',\n          width: width\n        };\n      }\n\n      if (resetAll || styleBottomLeftGrid !== this._lastRenderedStyleBottomLeftGrid) {\n        this._bottomLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: enableFixedColumnScroll ? 'auto' : 'hidden',\n          position: 'absolute'\n        }, styleBottomLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleBottomRightGrid !== this._lastRenderedStyleBottomRightGrid) {\n        this._bottomRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          position: 'absolute'\n        }, styleBottomRightGrid);\n      }\n\n      if (resetAll || styleTopLeftGrid !== this._lastRenderedStyleTopLeftGrid) {\n        this._topLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleTopRightGrid !== this._lastRenderedStyleTopRightGrid) {\n        this._topRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          overflowX: enableFixedRowScroll ? 'auto' : 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopRightGrid);\n      }\n\n      this._lastRenderedColumnWidth = columnWidth;\n      this._lastRenderedFixedColumnCount = fixedColumnCount;\n      this._lastRenderedFixedRowCount = fixedRowCount;\n      this._lastRenderedHeight = height;\n      this._lastRenderedRowHeight = rowHeight;\n      this._lastRenderedStyle = style;\n      this._lastRenderedStyleBottomLeftGrid = styleBottomLeftGrid;\n      this._lastRenderedStyleBottomRightGrid = styleBottomRightGrid;\n      this._lastRenderedStyleTopLeftGrid = styleTopLeftGrid;\n      this._lastRenderedStyleTopRightGrid = styleTopRightGrid;\n      this._lastRenderedWidth = width;\n    }\n  }, {\n    key: \"_prepareForRender\",\n    value: function _prepareForRender() {\n      if (this._lastRenderedColumnWidth !== this.props.columnWidth || this._lastRenderedFixedColumnCount !== this.props.fixedColumnCount) {\n        this._leftGridWidth = null;\n      }\n\n      if (this._lastRenderedFixedRowCount !== this.props.fixedRowCount || this._lastRenderedRowHeight !== this.props.rowHeight) {\n        this._topGridHeight = null;\n      }\n\n      this._maybeCalculateCachedStyles();\n\n      this._lastRenderedColumnWidth = this.props.columnWidth;\n      this._lastRenderedFixedColumnCount = this.props.fixedColumnCount;\n      this._lastRenderedFixedRowCount = this.props.fixedRowCount;\n      this._lastRenderedRowHeight = this.props.rowHeight;\n    }\n  }, {\n    key: \"_renderBottomLeftGrid\",\n    value: function _renderBottomLeftGrid(props) {\n      var enableFixedColumnScroll = props.enableFixedColumnScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          hideBottomLeftGridScrollbar = props.hideBottomLeftGridScrollbar;\n      var showVerticalScrollbar = this.state.showVerticalScrollbar;\n\n      if (!fixedColumnCount) {\n        return null;\n      }\n\n      var additionalRowCount = showVerticalScrollbar ? 1 : 0,\n          height = this._getBottomGridHeight(props),\n          width = this._getLeftGridWidth(props),\n          scrollbarSize = this.state.showVerticalScrollbar ? this.state.scrollbarSize : 0,\n          gridWidth = hideBottomLeftGridScrollbar ? width + scrollbarSize : width;\n\n      var bottomLeftGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomLeftGrid,\n        className: this.props.classNameBottomLeftGrid,\n        columnCount: fixedColumnCount,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomLeftGrid,\n        height: height,\n        onScroll: enableFixedColumnScroll ? this._onScrollTop : undefined,\n        ref: this._bottomLeftGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount) + additionalRowCount,\n        rowHeight: this._rowHeightBottomGrid,\n        style: this._bottomLeftGridStyle,\n        tabIndex: null,\n        width: gridWidth\n      }));\n\n      if (hideBottomLeftGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"BottomLeftGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._bottomLeftGridStyle, {\n            height: height,\n            width: width,\n            overflowY: 'hidden'\n          })\n        }, bottomLeftGrid);\n      }\n\n      return bottomLeftGrid;\n    }\n  }, {\n    key: \"_renderBottomRightGrid\",\n    value: function _renderBottomRightGrid(props) {\n      var columnCount = props.columnCount,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          scrollToColumn = props.scrollToColumn,\n          scrollToRow = props.scrollToRow;\n      return React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomRightGrid,\n        className: this.props.classNameBottomRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount),\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomRightGrid,\n        height: this._getBottomGridHeight(props),\n        onScroll: this._onScroll,\n        onScrollbarPresenceChange: this._onScrollbarPresenceChange,\n        ref: this._bottomRightGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount),\n        rowHeight: this._rowHeightBottomGrid,\n        scrollToColumn: scrollToColumn - fixedColumnCount,\n        scrollToRow: scrollToRow - fixedRowCount,\n        style: this._bottomRightGridStyle,\n        width: this._getRightGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopLeftGrid\",\n    value: function _renderTopLeftGrid(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount;\n\n      if (!fixedColumnCount || !fixedRowCount) {\n        return null;\n      }\n\n      return React.createElement(Grid, _extends({}, props, {\n        className: this.props.classNameTopLeftGrid,\n        columnCount: fixedColumnCount,\n        height: this._getTopGridHeight(props),\n        ref: this._topLeftGridRef,\n        rowCount: fixedRowCount,\n        style: this._topLeftGridStyle,\n        tabIndex: null,\n        width: this._getLeftGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopRightGrid\",\n    value: function _renderTopRightGrid(props) {\n      var columnCount = props.columnCount,\n          enableFixedRowScroll = props.enableFixedRowScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          scrollLeft = props.scrollLeft,\n          hideTopRightGridScrollbar = props.hideTopRightGridScrollbar;\n      var _this$state5 = this.state,\n          showHorizontalScrollbar = _this$state5.showHorizontalScrollbar,\n          scrollbarSize = _this$state5.scrollbarSize;\n\n      if (!fixedRowCount) {\n        return null;\n      }\n\n      var additionalColumnCount = showHorizontalScrollbar ? 1 : 0,\n          height = this._getTopGridHeight(props),\n          width = this._getRightGridWidth(props),\n          additionalHeight = showHorizontalScrollbar ? scrollbarSize : 0;\n\n      var gridHeight = height,\n          style = this._topRightGridStyle;\n\n      if (hideTopRightGridScrollbar) {\n        gridHeight = height + additionalHeight;\n        style = _objectSpread({}, this._topRightGridStyle, {\n          left: 0\n        });\n      }\n\n      var topRightGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererTopRightGrid,\n        className: this.props.classNameTopRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount) + additionalColumnCount,\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheTopRightGrid,\n        height: gridHeight,\n        onScroll: enableFixedRowScroll ? this._onScrollLeft : undefined,\n        ref: this._topRightGridRef,\n        rowCount: fixedRowCount,\n        scrollLeft: scrollLeft,\n        style: style,\n        tabIndex: null,\n        width: width\n      }));\n\n      if (hideTopRightGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"TopRightGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._topRightGridStyle, {\n            height: height,\n            width: width,\n            overflowX: 'hidden'\n          })\n        }, topRightGrid);\n      }\n\n      return topRightGrid;\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null && nextProps.scrollLeft >= 0 ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null && nextProps.scrollTop >= 0 ? nextProps.scrollTop : prevState.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return MultiGrid;\n}(React.PureComponent);\n\n_defineProperty(MultiGrid, \"defaultProps\", {\n  classNameBottomLeftGrid: '',\n  classNameBottomRightGrid: '',\n  classNameTopLeftGrid: '',\n  classNameTopRightGrid: '',\n  enableFixedColumnScroll: false,\n  enableFixedRowScroll: false,\n  fixedColumnCount: 0,\n  fixedRowCount: 0,\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  styleBottomLeftGrid: {},\n  styleBottomRightGrid: {},\n  styleTopLeftGrid: {},\n  styleTopRightGrid: {},\n  hideTopRightGridScrollbar: false,\n  hideBottomLeftGridScrollbar: false\n});\n\nMultiGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  classNameBottomLeftGrid: PropTypes.string.isRequired,\n  classNameBottomRightGrid: PropTypes.string.isRequired,\n  classNameTopLeftGrid: PropTypes.string.isRequired,\n  classNameTopRightGrid: PropTypes.string.isRequired,\n  enableFixedColumnScroll: PropTypes.bool.isRequired,\n  enableFixedRowScroll: PropTypes.bool.isRequired,\n  fixedColumnCount: PropTypes.number.isRequired,\n  fixedRowCount: PropTypes.number.isRequired,\n  onScrollbarPresenceChange: PropTypes.func,\n  style: PropTypes.object.isRequired,\n  styleBottomLeftGrid: PropTypes.object.isRequired,\n  styleBottomRightGrid: PropTypes.object.isRequired,\n  styleTopLeftGrid: PropTypes.object.isRequired,\n  styleTopRightGrid: PropTypes.object.isRequired,\n  hideTopRightGridScrollbar: PropTypes.bool,\n  hideBottomLeftGridScrollbar: PropTypes.bool\n} : {};\npolyfill(MultiGrid);\nexport default MultiGrid;"]},"metadata":{},"sourceType":"module"}