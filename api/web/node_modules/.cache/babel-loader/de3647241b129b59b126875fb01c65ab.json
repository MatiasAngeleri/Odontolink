{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport SortDirection from './SortDirection';\n/**\n * Describes the header and cell contents of a table column.\n */\n\nvar Column = /*#__PURE__*/function (_React$Component) {\n  _inherits(Column, _React$Component);\n\n  function Column() {\n    _classCallCheck(this, Column);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Column).apply(this, arguments));\n  }\n\n  return Column;\n}(React.Component);\n\n_defineProperty(Column, \"defaultProps\", {\n  cellDataGetter: defaultCellDataGetter,\n  cellRenderer: defaultCellRenderer,\n  defaultSortDirection: SortDirection.ASC,\n  flexGrow: 0,\n  flexShrink: 1,\n  headerRenderer: defaultHeaderRenderer,\n  style: {}\n});\n\nexport { Column as default };\nColumn.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Optional aria-label value to set on the column header */\n  'aria-label': PropTypes.string,\n\n  /**\n   * Callback responsible for returning a cell's data, given its :dataKey\n   * ({ columnData: any, dataKey: string, rowData: any }): any\n   */\n  cellDataGetter: PropTypes.func,\n\n  /**\n   * Callback responsible for rendering a cell's contents.\n   * ({ cellData: any, columnData: any, dataKey: string, rowData: any, rowIndex: number }): node\n   */\n  cellRenderer: PropTypes.func,\n\n  /** Optional CSS class to apply to cell */\n  className: PropTypes.string,\n\n  /** Optional additional data passed to this column's :cellDataGetter */\n  columnData: PropTypes.object,\n\n  /** Uniquely identifies the row-data attribute corresponding to this cell */\n  dataKey: PropTypes.any.isRequired,\n\n  /** Optional direction to be used when clicked the first time */\n  defaultSortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** If sort is enabled for the table at large, disable it for this column */\n  disableSort: PropTypes.bool,\n\n  /** Flex grow style; defaults to 0 */\n  flexGrow: PropTypes.number,\n\n  /** Flex shrink style; defaults to 1 */\n  flexShrink: PropTypes.number,\n\n  /** Optional CSS class to apply to this column's header */\n  headerClassName: PropTypes.string,\n\n  /**\n   * Optional callback responsible for rendering a column header contents.\n   * ({ columnData: object, dataKey: string, disableSort: boolean, label: node, sortBy: string, sortDirection: string }): PropTypes.node\n   */\n  headerRenderer: PropTypes.func.isRequired,\n\n  /** Optional inline style to apply to this column's header */\n  headerStyle: PropTypes.object,\n\n  /** Optional id to set on the column header */\n  id: PropTypes.string,\n\n  /** Header label for this column */\n  label: PropTypes.node,\n\n  /** Maximum width of column; this property will only be used if :flexGrow is > 0. */\n  maxWidth: PropTypes.number,\n\n  /** Minimum width of column. */\n  minWidth: PropTypes.number,\n\n  /** Optional inline style to apply to cell */\n  style: PropTypes.object,\n\n  /** Flex basis (width) for this column; This value can grow or shrink based on :flexGrow and :flexShrink properties. */\n  width: PropTypes.number.isRequired\n} : {};","map":{"version":3,"sources":["/home/ycali/dev/CONSULTORIO/web/node_modules/react-virtualized/dist/es/Table/Column.js"],"names":["_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","_inherits","_defineProperty","PropTypes","React","defaultHeaderRenderer","defaultCellRenderer","defaultCellDataGetter","SortDirection","Column","_React$Component","apply","arguments","Component","cellDataGetter","cellRenderer","defaultSortDirection","ASC","flexGrow","flexShrink","headerRenderer","style","default","propTypes","process","env","NODE_ENV","string","func","className","columnData","object","dataKey","any","isRequired","oneOf","DESC","disableSort","bool","number","headerClassName","headerStyle","id","label","node","maxWidth","minWidth","width"],"mappings":"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","sourcesContent":["import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport SortDirection from './SortDirection';\n/**\n * Describes the header and cell contents of a table column.\n */\n\nvar Column =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Column, _React$Component);\n\n  function Column() {\n    _classCallCheck(this, Column);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Column).apply(this, arguments));\n  }\n\n  return Column;\n}(React.Component);\n\n_defineProperty(Column, \"defaultProps\", {\n  cellDataGetter: defaultCellDataGetter,\n  cellRenderer: defaultCellRenderer,\n  defaultSortDirection: SortDirection.ASC,\n  flexGrow: 0,\n  flexShrink: 1,\n  headerRenderer: defaultHeaderRenderer,\n  style: {}\n});\n\nexport { Column as default };\nColumn.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Optional aria-label value to set on the column header */\n  'aria-label': PropTypes.string,\n\n  /**\n   * Callback responsible for returning a cell's data, given its :dataKey\n   * ({ columnData: any, dataKey: string, rowData: any }): any\n   */\n  cellDataGetter: PropTypes.func,\n\n  /**\n   * Callback responsible for rendering a cell's contents.\n   * ({ cellData: any, columnData: any, dataKey: string, rowData: any, rowIndex: number }): node\n   */\n  cellRenderer: PropTypes.func,\n\n  /** Optional CSS class to apply to cell */\n  className: PropTypes.string,\n\n  /** Optional additional data passed to this column's :cellDataGetter */\n  columnData: PropTypes.object,\n\n  /** Uniquely identifies the row-data attribute corresponding to this cell */\n  dataKey: PropTypes.any.isRequired,\n\n  /** Optional direction to be used when clicked the first time */\n  defaultSortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** If sort is enabled for the table at large, disable it for this column */\n  disableSort: PropTypes.bool,\n\n  /** Flex grow style; defaults to 0 */\n  flexGrow: PropTypes.number,\n\n  /** Flex shrink style; defaults to 1 */\n  flexShrink: PropTypes.number,\n\n  /** Optional CSS class to apply to this column's header */\n  headerClassName: PropTypes.string,\n\n  /**\n   * Optional callback responsible for rendering a column header contents.\n   * ({ columnData: object, dataKey: string, disableSort: boolean, label: node, sortBy: string, sortDirection: string }): PropTypes.node\n   */\n  headerRenderer: PropTypes.func.isRequired,\n\n  /** Optional inline style to apply to this column's header */\n  headerStyle: PropTypes.object,\n\n  /** Optional id to set on the column header */\n  id: PropTypes.string,\n\n  /** Header label for this column */\n  label: PropTypes.node,\n\n  /** Maximum width of column; this property will only be used if :flexGrow is > 0. */\n  maxWidth: PropTypes.number,\n\n  /** Minimum width of column. */\n  minWidth: PropTypes.number,\n\n  /** Optional inline style to apply to cell */\n  style: PropTypes.object,\n\n  /** Flex basis (width) for this column; This value can grow or shrink based on :flexGrow and :flexShrink properties. */\n  width: PropTypes.number.isRequired\n} : {};"]},"metadata":{},"sourceType":"module"}